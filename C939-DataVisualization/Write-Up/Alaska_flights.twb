<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Alaskan_Flights' inline='true' name='federated.1jwssxb0fay8gf1ebsokl1tveyit' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Alaskan_Flights' name='textscan.1rz4vw71qly8nc15msebt0adesqh'>
            <connection class='textscan' directory='C:/Users/Michael/Documents/GitHub/WGU-Projects/C939-DataVisualization/Write-Up' filename='Alaskan_Flights.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1rz4vw71qly8nc15msebt0adesqh' name='Alaskan_Flights.csv' table='[Alaskan_Flights#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='carrier code' ordinal='0' />
            <column datatype='string' name='carrier name' ordinal='1' />
            <column datatype='string' name='destination city' ordinal='2' />
            <column datatype='string' name='destination code' ordinal='3' />
            <column datatype='string' name='destination country' ordinal='4' />
            <column datatype='string' name='destination name' ordinal='5' />
            <column datatype='string' name='destination state' ordinal='6' />
            <column datatype='string' name='destination Timezone' ordinal='7' />
            <column datatype='string' name='direction' ordinal='8' />
            <column datatype='integer' name='flight number' ordinal='9' />
            <column datatype='string' name='origin airport code' ordinal='10' />
            <column datatype='string' name='origin airport name' ordinal='11' />
            <column datatype='string' name='origin city' ordinal='12' />
            <column datatype='string' name='origin country' ordinal='13' />
            <column datatype='string' name='origin state' ordinal='14' />
            <column datatype='string' name='origin tz' ordinal='15' />
            <column datatype='string' name='route' ordinal='16' />
            <column datatype='string' name='tail number' ordinal='17' />
            <column datatype='date' name='date' ordinal='18' />
            <column datatype='integer' name='bearing' ordinal='19' />
            <column datatype='real' name='destination latitude' ordinal='20' />
            <column datatype='real' name='destination longitude' ordinal='21' />
            <column datatype='integer' name='distance' ordinal='22' />
            <column datatype='real' name='origin latitude' ordinal='23' />
            <column datatype='real' name='origin longitude' ordinal='24' />
            <column datatype='integer' name='travel time' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1rz4vw71qly8nc15msebt0adesqh' name='Alaskan_Flights.csv' table='[Alaskan_Flights#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='carrier code' ordinal='0' />
            <column datatype='string' name='carrier name' ordinal='1' />
            <column datatype='string' name='destination city' ordinal='2' />
            <column datatype='string' name='destination code' ordinal='3' />
            <column datatype='string' name='destination country' ordinal='4' />
            <column datatype='string' name='destination name' ordinal='5' />
            <column datatype='string' name='destination state' ordinal='6' />
            <column datatype='string' name='destination Timezone' ordinal='7' />
            <column datatype='string' name='direction' ordinal='8' />
            <column datatype='integer' name='flight number' ordinal='9' />
            <column datatype='string' name='origin airport code' ordinal='10' />
            <column datatype='string' name='origin airport name' ordinal='11' />
            <column datatype='string' name='origin city' ordinal='12' />
            <column datatype='string' name='origin country' ordinal='13' />
            <column datatype='string' name='origin state' ordinal='14' />
            <column datatype='string' name='origin tz' ordinal='15' />
            <column datatype='string' name='route' ordinal='16' />
            <column datatype='string' name='tail number' ordinal='17' />
            <column datatype='date' name='date' ordinal='18' />
            <column datatype='integer' name='bearing' ordinal='19' />
            <column datatype='real' name='destination latitude' ordinal='20' />
            <column datatype='real' name='destination longitude' ordinal='21' />
            <column datatype='integer' name='distance' ordinal='22' />
            <column datatype='real' name='origin latitude' ordinal='23' />
            <column datatype='real' name='origin longitude' ordinal='24' />
            <column datatype='integer' name='travel time' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier code]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>carrier code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier name]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>carrier name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination city]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>destination city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination code]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>destination code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination country]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>destination country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination name]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>destination name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination state]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>destination state</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination Timezone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination Timezone]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>destination Timezone</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[direction]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>direction</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flight number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[flight number]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>flight number</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin airport code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin airport code]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>origin airport code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin airport name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin airport name]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>origin airport name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin city]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>origin city</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin country]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>origin country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin state]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>origin state</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin tz</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin tz]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>origin tz</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tail number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tail number]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>tail number</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bearing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bearing]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>bearing</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[destination latitude]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>destination latitude</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[destination longitude]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>destination longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[origin latitude]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>origin latitude</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[origin longitude]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>origin longitude</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>travel time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[travel time]</local-name>
            <parent-name>[Alaskan_Flights.csv]</parent-name>
            <remote-alias>travel time</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Weekday' datatype='string' name='[Calculation_274156682149371906]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
      </column>
      <column caption='Travel Type' datatype='string' name='[Calculation_274156682149867523]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ([origin state] == [destination state]) THEN &quot;Intrastate&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot;) THEN &quot;Outbound&quot;&#13;&#10;ELSEIF ([destination state] == &quot;AK&quot;) THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[State Travel]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_274156682149867523]' new-bin='true'>
          <bin default-name='false' value='&quot;Interstate&quot;'>
            <value>&quot;Inbound&quot;</value>
            <value>&quot;Outbound&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Alaskan_Flights.csv' datatype='table' name='[__tableau_internal_object_id__].[Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB]' role='measure' type='quantitative' />
      <column caption='Bearing' datatype='integer' name='[bearing]' role='measure' type='quantitative' />
      <column caption='Carrier Code' datatype='string' name='[carrier code]' role='dimension' type='nominal' />
      <column caption='Carrier Name' datatype='string' name='[carrier name]' role='dimension' type='nominal' />
      <column caption='Destination City' datatype='string' name='[destination city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Destination Code' datatype='string' name='[destination code]' role='dimension' type='nominal' />
      <column caption='Destination Country' datatype='string' name='[destination country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Destination Latitude' datatype='real' name='[destination latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Destination Longitude' datatype='real' name='[destination longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Destination Name' datatype='string' name='[destination name]' role='dimension' type='nominal' />
      <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Direction' datatype='string' name='[direction]' role='dimension' type='nominal' />
      <column caption='Distance' datatype='integer' name='[distance]' role='measure' type='quantitative' />
      <column caption='Flight Number' datatype='integer' name='[flight number]' role='dimension' type='ordinal' />
      <column caption='Origin Airport Code' datatype='string' name='[origin airport code]' role='dimension' type='nominal' />
      <column caption='Origin Airport Name' datatype='string' name='[origin airport name]' role='dimension' type='nominal' />
      <column caption='Origin City' datatype='string' name='[origin city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Origin Country' datatype='string' name='[origin country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Origin Latitude' datatype='real' name='[origin latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Origin Longitude' datatype='real' name='[origin longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Origin Tz' datatype='string' name='[origin tz]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Tail Number' datatype='string' name='[tail number]' role='dimension' type='nominal' />
      <column caption='Travel Time' datatype='integer' name='[travel time]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_274156682149867523]' derivation='None' name='[none:Calculation_274156682149867523:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Destination Airport'>
          <field>[destination code]</field>
          <field>[destination name]</field>
        </drill-path>
        <drill-path name='Origin Airport'>
          <field>[origin airport code]</field>
          <field>[origin airport name]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_274156682149867523:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Inbound&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Outbound&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Intrastate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[State Travel]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Interstate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Intrastate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Alaskan_Flights.csv' id='Alaskan_Flights.csv_CF6ECA3581F0488988333D9C5BF716EB'>
            <properties context=''>
              <relation connection='textscan.1rz4vw71qly8nc15msebt0adesqh' name='Alaskan_Flights.csv' table='[Alaskan_Flights#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='carrier code' ordinal='0' />
                  <column datatype='string' name='carrier name' ordinal='1' />
                  <column datatype='string' name='destination city' ordinal='2' />
                  <column datatype='string' name='destination code' ordinal='3' />
                  <column datatype='string' name='destination country' ordinal='4' />
                  <column datatype='string' name='destination name' ordinal='5' />
                  <column datatype='string' name='destination state' ordinal='6' />
                  <column datatype='string' name='destination Timezone' ordinal='7' />
                  <column datatype='string' name='direction' ordinal='8' />
                  <column datatype='integer' name='flight number' ordinal='9' />
                  <column datatype='string' name='origin airport code' ordinal='10' />
                  <column datatype='string' name='origin airport name' ordinal='11' />
                  <column datatype='string' name='origin city' ordinal='12' />
                  <column datatype='string' name='origin country' ordinal='13' />
                  <column datatype='string' name='origin state' ordinal='14' />
                  <column datatype='string' name='origin tz' ordinal='15' />
                  <column datatype='string' name='route' ordinal='16' />
                  <column datatype='string' name='tail number' ordinal='17' />
                  <column datatype='date' name='date' ordinal='18' />
                  <column datatype='integer' name='bearing' ordinal='19' />
                  <column datatype='real' name='destination latitude' ordinal='20' />
                  <column datatype='real' name='destination longitude' ordinal='21' />
                  <column datatype='integer' name='distance' ordinal='22' />
                  <column datatype='real' name='origin latitude' ordinal='23' />
                  <column datatype='real' name='origin longitude' ordinal='24' />
                  <column datatype='integer' name='travel time' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Custom SQL Query (air_travel)' inline='true' name='federated.05taxxh0y0vkr91czu24b1dnht9u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mongodb.0oz99nx10ft7d61b6nc860tz3zpc'>
            <connection class='mongodb' dbname='air_travel' one-time-sql='' port='3307' server='localhost' source-charset='' username='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mongodb.0oz99nx10ft7d61b6nc860tz3zpc' name='Custom SQL Query' type='text'>SELECT&#13;
    `flight.route.route` as &quot;route&quot;,&#13;
    `flight.route.destination_airport.iata` as &quot;destination airport code&quot;,&#13;
    `flight.route.destination_airport.airport` as &quot;destination airport name&quot;,&#13;
    `flight.route.destination_airport.state` as &quot;destination state&quot;,&#13;
    `flight.route.destination_airport.city` as &quot;destination city&quot;,&#13;
    `flight.route.origin_airport.iata` as &quot;origin airport code&quot;,&#13;
    `flight.route.origin_airport.airport` as &quot;origin airport name&quot;,&#13;
    `flight.route.origin_airport.state` as &quot;origin state&quot;,&#13;
    `flight.route.origin_airport.city` as &quot;origin city&quot;,&#13;
    IFNULL(DATE(`times.sched_depart_utc`), DATE(`times.actual_depart_utc`)) as date&#13;
FROM detailed_flights&#13;
WHERE&#13;
    `flight.route.destination_airport.state` LIKE &quot;AK&quot;&#13;
    OR&#13;
    `flight.route.origin_airport.state` LIKE &quot;AK&quot;</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mongodb.0oz99nx10ft7d61b6nc860tz3zpc' name='Custom SQL Query' type='text'>SELECT&#13;
    `flight.route.route` as &quot;route&quot;,&#13;
    `flight.route.destination_airport.iata` as &quot;destination airport code&quot;,&#13;
    `flight.route.destination_airport.airport` as &quot;destination airport name&quot;,&#13;
    `flight.route.destination_airport.state` as &quot;destination state&quot;,&#13;
    `flight.route.destination_airport.city` as &quot;destination city&quot;,&#13;
    `flight.route.origin_airport.iata` as &quot;origin airport code&quot;,&#13;
    `flight.route.origin_airport.airport` as &quot;origin airport name&quot;,&#13;
    `flight.route.origin_airport.state` as &quot;origin state&quot;,&#13;
    `flight.route.origin_airport.city` as &quot;origin city&quot;,&#13;
    IFNULL(DATE(`times.sched_depart_utc`), DATE(`times.actual_depart_utc`)) as date&#13;
FROM detailed_flights&#13;
WHERE&#13;
    `flight.route.destination_airport.state` LIKE &quot;AK&quot;&#13;
    OR&#13;
    `flight.route.origin_airport.state` LIKE &quot;AK&quot;</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>130</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>85</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CustomSQL_480E47FD86FC4BC89372C358C423912A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination airport code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[destination airport code]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>destination airport code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>85</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CustomSQL_480E47FD86FC4BC89372C358C423912A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination airport name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[destination airport name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>destination airport name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>85</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CustomSQL_480E47FD86FC4BC89372C358C423912A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[destination state]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>destination state</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>85</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CustomSQL_480E47FD86FC4BC89372C358C423912A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[destination city]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>destination city</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>85</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CustomSQL_480E47FD86FC4BC89372C358C423912A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin airport code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[origin airport code]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>origin airport code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>85</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CustomSQL_480E47FD86FC4BC89372C358C423912A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin airport name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[origin airport name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>origin airport name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>85</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CustomSQL_480E47FD86FC4BC89372C358C423912A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[origin state]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>origin state</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>85</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CustomSQL_480E47FD86FC4BC89372C358C423912A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[origin city]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>origin city</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>85</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CustomSQL_480E47FD86FC4BC89372C358C423912A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CustomSQL_480E47FD86FC4BC89372C358C423912A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[CustomSQL_480E47FD86FC4BC89372C358C423912A]' role='measure' type='quantitative' />
      <column datatype='string' name='[destination city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[origin city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='CustomSQL_480E47FD86FC4BC89372C358C423912A'>
            <properties context=''>
              <relation connection='mongodb.0oz99nx10ft7d61b6nc860tz3zpc' name='Custom SQL Query' type='text'>SELECT&#13;
    `flight.route.route` as &quot;route&quot;,&#13;
    `flight.route.destination_airport.iata` as &quot;destination airport code&quot;,&#13;
    `flight.route.destination_airport.airport` as &quot;destination airport name&quot;,&#13;
    `flight.route.destination_airport.state` as &quot;destination state&quot;,&#13;
    `flight.route.destination_airport.city` as &quot;destination city&quot;,&#13;
    `flight.route.origin_airport.iata` as &quot;origin airport code&quot;,&#13;
    `flight.route.origin_airport.airport` as &quot;origin airport name&quot;,&#13;
    `flight.route.origin_airport.state` as &quot;origin state&quot;,&#13;
    `flight.route.origin_airport.city` as &quot;origin city&quot;,&#13;
    IFNULL(DATE(`times.sched_depart_utc`), DATE(`times.actual_depart_utc`)) as date&#13;
FROM detailed_flights&#13;
WHERE&#13;
    `flight.route.destination_airport.state` LIKE &quot;AK&quot;&#13;
    OR&#13;
    `flight.route.origin_airport.state` LIKE &quot;AK&quot;</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Intra/Inter Growth'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Flights' name='federated.1jwssxb0fay8gf1ebsokl1tveyit' />
          </datasources>
          <datasource-dependencies datasource='federated.1jwssxb0fay8gf1ebsokl1tveyit'>
            <column caption='Travel Type' datatype='string' name='[Calculation_274156682149867523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([origin state] == [destination state]) THEN &quot;Intrastate&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot;) THEN &quot;Outbound&quot;&#13;&#10;ELSEIF ([destination state] == &quot;AK&quot;) THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[State Travel]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_274156682149867523]' new-bin='true'>
                <bin default-name='false' value='&quot;Interstate&quot;'>
                  <value>&quot;Inbound&quot;</value>
                  <value>&quot;Outbound&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Calculation_274156682149867523]' derivation='Count' name='[cnt:Calculation_274156682149867523:qk]' pivot='key' type='quantitative' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Interstate&quot;</bucket>
              <bucket>&quot;Intrastate&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[cnt:Calculation_274156682149867523:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{95127270-D112-4D78-BEFC-0D22ED2BCB1C}' />
    </worksheet>
    <worksheet name='Intra/Inter Travel, Quarters and Years'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Flights' name='federated.1jwssxb0fay8gf1ebsokl1tveyit' />
          </datasources>
          <datasource-dependencies datasource='federated.1jwssxb0fay8gf1ebsokl1tveyit'>
            <column caption='Travel Type' datatype='string' name='[Calculation_274156682149867523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([origin state] == [destination state]) THEN &quot;Intrastate&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot;) THEN &quot;Outbound&quot;&#13;&#10;ELSEIF ([destination state] == &quot;AK&quot;) THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[State Travel]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_274156682149867523]' new-bin='true'>
                <bin default-name='false' value='&quot;Interstate&quot;'>
                  <value>&quot;Inbound&quot;</value>
                  <value>&quot;Outbound&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Calculation_274156682149867523]' derivation='Count' name='[cnt:Calculation_274156682149867523:qk]' pivot='key' type='quantitative' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[cnt:Calculation_274156682149867523:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{84982A60-5C5B-42E2-8937-F5CA85782396}' />
    </worksheet>
    <worksheet name='Intrastate Airport Volume Counts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Flights' name='federated.1jwssxb0fay8gf1ebsokl1tveyit' />
          </datasources>
          <datasource-dependencies datasource='federated.1jwssxb0fay8gf1ebsokl1tveyit'>
            <column caption='Travel Type' datatype='string' name='[Calculation_274156682149867523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([origin state] == [destination state]) THEN &quot;Intrastate&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot;) THEN &quot;Outbound&quot;&#13;&#10;ELSEIF ([destination state] == &quot;AK&quot;) THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[State Travel]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_274156682149867523]' new-bin='true'>
                <bin default-name='false' value='&quot;Interstate&quot;'>
                  <value>&quot;Inbound&quot;</value>
                  <value>&quot;Outbound&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[route]' derivation='Count' name='[cnt:route:qk]' pivot='key' type='quantitative' />
            <column caption='Destination Code' datatype='string' name='[destination code]' role='dimension' type='nominal' />
            <column caption='Destination Name' datatype='string' name='[destination name]' role='dimension' type='nominal' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[destination code]' derivation='None' name='[none:destination code:nk]' pivot='key' type='nominal' />
            <column-instance column='[destination name]' derivation='None' name='[none:destination name:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin airport code]' derivation='None' name='[none:origin airport code:nk]' pivot='key' type='nominal' />
            <column caption='Origin Airport Code' datatype='string' name='[origin airport code]' role='dimension' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]'>
            <groupfilter function='member' level='[State Travel]' member='&quot;Intrastate&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination name:nk]' value='87' />
            <format attr='text-format' data-class='subtotal' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[cnt:route:qk]' value='' />
            <format attr='width' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]' value='83' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[cnt:route:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true' total='true'>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport code:nk]</rows>
        <cols onLeft='true' total='true'>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]</cols>
      </table>
      <simple-id uuid='{CB1EBA97-0548-4FAB-8C7F-6A7392CB8464}' />
    </worksheet>
    <worksheet name='Intrastate Airport Volume Percents'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Flights' name='federated.1jwssxb0fay8gf1ebsokl1tveyit' />
          </datasources>
          <datasource-dependencies datasource='federated.1jwssxb0fay8gf1ebsokl1tveyit'>
            <column caption='Travel Type' datatype='string' name='[Calculation_274156682149867523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([origin state] == [destination state]) THEN &quot;Intrastate&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot;) THEN &quot;Outbound&quot;&#13;&#10;ELSEIF ([destination state] == &quot;AK&quot;) THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[State Travel]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_274156682149867523]' new-bin='true'>
                <bin default-name='false' value='&quot;Interstate&quot;'>
                  <value>&quot;Inbound&quot;</value>
                  <value>&quot;Outbound&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Destination Code' datatype='string' name='[destination code]' role='dimension' type='nominal' />
            <column caption='Destination Name' datatype='string' name='[destination name]' role='dimension' type='nominal' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[destination code]' derivation='None' name='[none:destination code:nk]' pivot='key' type='nominal' />
            <column-instance column='[destination name]' derivation='None' name='[none:destination name:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin airport code]' derivation='None' name='[none:origin airport code:nk]' pivot='key' type='nominal' />
            <column caption='Origin Airport Code' datatype='string' name='[origin airport code]' role='dimension' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[route]' derivation='Count' name='[pcto:cnt:route:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' type='PctTotal'>
                <order field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport code:nk]' />
                <order field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[destination code]' />
              </table-calc>
            </column-instance>
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]'>
            <groupfilter function='member' level='[State Travel]' member='&quot;Intrastate&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination name:nk]' value='87' />
            <format attr='width' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]' value='83' />
            <format attr='text-format' data-class='subtotal' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[pcto:cnt:route:qk:4]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[pcto:cnt:route:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true' total='true'>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport code:nk]</rows>
        <cols onLeft='true' total='true'>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]</cols>
      </table>
      <simple-id uuid='{30B3A88A-7530-44BB-BD14-C69F07CE1E8C}' />
    </worksheet>
    <worksheet name='State Inbound Airport Volume'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Flights' name='federated.1jwssxb0fay8gf1ebsokl1tveyit' />
          </datasources>
          <datasource-dependencies datasource='federated.1jwssxb0fay8gf1ebsokl1tveyit'>
            <column caption='Travel Type' datatype='string' name='[Calculation_274156682149867523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([origin state] == [destination state]) THEN &quot;Intrastate&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot;) THEN &quot;Outbound&quot;&#13;&#10;ELSEIF ([destination state] == &quot;AK&quot;) THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column caption='Destination Code' datatype='string' name='[destination code]' role='dimension' type='nominal' />
            <column caption='Destination Name' datatype='string' name='[destination name]' role='dimension' type='nominal' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_274156682149867523]' derivation='None' name='[none:Calculation_274156682149867523:nk]' pivot='key' type='nominal' />
            <column-instance column='[destination code]' derivation='None' name='[none:destination code:nk]' pivot='key' type='nominal' />
            <column-instance column='[destination name]' derivation='None' name='[none:destination name:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin airport code]' derivation='None' name='[none:origin airport code:nk]' pivot='key' type='nominal' />
            <column caption='Origin Airport Code' datatype='string' name='[origin airport code]' role='dimension' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[route]' derivation='Count' name='[pcto:cnt:route:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]'>
            <groupfilter function='member' level='[none:Calculation_274156682149867523:nk]' member='&quot;Inbound&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination name:nk]' value='87' />
            <format attr='width' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]' value='83' />
            <format attr='text-format' data-class='subtotal' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[pcto:cnt:route:qk:5]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <size column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[pcto:cnt:route:qk:5]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true' total='true'>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport code:nk]</rows>
        <cols onLeft='true' total='true'>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]</cols>
      </table>
      <simple-id uuid='{F6A52FCA-9C8C-4791-A2AF-64EBE7B324B9}' />
    </worksheet>
    <worksheet name='State Outbount Airport Volume'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Flights' name='federated.1jwssxb0fay8gf1ebsokl1tveyit' />
          </datasources>
          <datasource-dependencies datasource='federated.1jwssxb0fay8gf1ebsokl1tveyit'>
            <column caption='Travel Type' datatype='string' name='[Calculation_274156682149867523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([origin state] == [destination state]) THEN &quot;Intrastate&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot;) THEN &quot;Outbound&quot;&#13;&#10;ELSEIF ([destination state] == &quot;AK&quot;) THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column caption='Destination Code' datatype='string' name='[destination code]' role='dimension' type='nominal' />
            <column caption='Destination Name' datatype='string' name='[destination name]' role='dimension' type='nominal' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_274156682149867523]' derivation='None' name='[none:Calculation_274156682149867523:nk]' pivot='key' type='nominal' />
            <column-instance column='[destination code]' derivation='None' name='[none:destination code:nk]' pivot='key' type='nominal' />
            <column-instance column='[destination name]' derivation='None' name='[none:destination name:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin airport code]' derivation='None' name='[none:origin airport code:nk]' pivot='key' type='nominal' />
            <column caption='Origin Airport Code' datatype='string' name='[origin airport code]' role='dimension' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[route]' derivation='Count' name='[pcto:cnt:route:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]'>
            <groupfilter function='member' level='[none:Calculation_274156682149867523:nk]' member='&quot;Outbound&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination name:nk]' value='87' />
            <format attr='width' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]' value='83' />
            <format attr='text-format' data-class='subtotal' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[pcto:cnt:route:qk:5]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <size column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[pcto:cnt:route:qk:5]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true' total='true'>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport code:nk]</rows>
        <cols onLeft='true' total='true'>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]</cols>
      </table>
      <simple-id uuid='{3B7FA553-A72E-4492-ACD3-124DD513B0E3}' />
    </worksheet>
    <worksheet name='State Travel by Weekdays'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Flights' name='federated.1jwssxb0fay8gf1ebsokl1tveyit' />
          </datasources>
          <datasource-dependencies datasource='federated.1jwssxb0fay8gf1ebsokl1tveyit'>
            <column caption='Weekday' datatype='string' name='[Calculation_274156682149371906]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
            </column>
            <column caption='Travel Type' datatype='string' name='[Calculation_274156682149867523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([origin state] == [destination state]) THEN &quot;Intrastate&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot;) THEN &quot;Outbound&quot;&#13;&#10;ELSEIF ([destination state] == &quot;AK&quot;) THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_274156682149867523]' derivation='Count' name='[cnt:Calculation_274156682149867523:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_274156682149371906]' derivation='None' name='[none:Calculation_274156682149371906:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_274156682149867523]' derivation='None' name='[none:Calculation_274156682149867523:nk]' pivot='key' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]' value='156' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[cnt:Calculation_274156682149867523:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]</rows>
        <cols>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149371906:nk]</cols>
      </table>
      <simple-id uuid='{7B264E1C-A2AF-47DD-9B0E-D0DE878FA738}' />
    </worksheet>
    <worksheet name='Total Travel, Quarters and Years'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Flights' name='federated.1jwssxb0fay8gf1ebsokl1tveyit' />
          </datasources>
          <datasource-dependencies datasource='federated.1jwssxb0fay8gf1ebsokl1tveyit'>
            <column caption='Travel Type' datatype='string' name='[Calculation_274156682149867523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([origin state] == [destination state]) THEN &quot;Intrastate&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot;) THEN &quot;Outbound&quot;&#13;&#10;ELSEIF ([destination state] == &quot;AK&quot;) THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_274156682149867523]' derivation='Count' name='[cnt:Calculation_274156682149867523:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_274156682149867523]' derivation='None' name='[none:Calculation_274156682149867523:nk]' pivot='key' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Intrastate&quot;</bucket>
              <bucket>&quot;Inbound&quot;</bucket>
              <bucket>&quot;Outbound&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[cnt:Calculation_274156682149867523:qk]' field-type='quantitative' max='9286' min='-1674' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <size column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[cnt:Calculation_274156682149867523:qk]</rows>
        <cols>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[qr:date:ok]</cols>
      </table>
      <simple-id uuid='{360B3056-DFF5-4907-BE3F-0BAA51B15913}' />
    </worksheet>
    <worksheet name='Travel Growth, Quarters and Years'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Flights' name='federated.1jwssxb0fay8gf1ebsokl1tveyit' />
          </datasources>
          <datasource-dependencies datasource='federated.1jwssxb0fay8gf1ebsokl1tveyit'>
            <column caption='Travel Type' datatype='string' name='[Calculation_274156682149867523]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([origin state] == [destination state]) THEN &quot;Intrastate&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot;) THEN &quot;Outbound&quot;&#13;&#10;ELSEIF ([destination state] == &quot;AK&quot;) THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_274156682149867523]' derivation='Count' name='[cnt:Calculation_274156682149867523:qk]' pivot='key' type='quantitative' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_274156682149867523]' derivation='None' name='[none:Calculation_274156682149867523:nk]' pivot='key' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Intrastate&quot;</bucket>
              <bucket>&quot;Inbound&quot;</bucket>
              <bucket>&quot;Outbound&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[cnt:Calculation_274156682149867523:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{88DACFDB-EFE0-44CA-A94F-77B396C5F6FB}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' name='State Travel by Weekdays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149371906:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33D50224-9976-4B77-B7D6-7D47E7E3814A}' />
    </window>
    <window class='worksheet' name='Total Travel, Quarters and Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149371906:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[yr:date:ok]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05513C81-2161-4534-9B14-8F42B684EDE4}' />
    </window>
    <window class='worksheet' name='Intra/Inter Travel, Quarters and Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[attr:Calculation_274156682149867523:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149371906:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF22B4A8-6CA3-4615-9D5B-A19453CB0EF2}' />
    </window>
    <window class='worksheet' name='Travel Growth, Quarters and Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[attr:Calculation_274156682149867523:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149371906:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{434EA4F5-439E-44E6-A78D-52AE4A17B317}' />
    </window>
    <window class='worksheet' name='Intra/Inter Growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[attr:Calculation_274156682149867523:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149371906:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83266E1E-5E07-4122-993F-6C20C2FC9DF6}' />
    </window>
    <window class='worksheet' name='Intrastate Airport Volume Counts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682239578119:qk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination name:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport code:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport name:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:route:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[win:sum:distance:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83871837-38E3-4D8F-9F6B-969FE288650A}' />
    </window>
    <window class='worksheet' name='Intrastate Airport Volume Percents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[cnt:route:qk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682239578119:qk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination name:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport code:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport name:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[win:sum:distance:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B4B3E44-9C99-45BE-95A1-CF657B1B309D}' />
    </window>
    <window class='worksheet' name='State Inbound Airport Volume'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[pcto:cnt:route:qk:5]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[cnt:route:qk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682239578119:qk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination name:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport code:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport name:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[win:sum:distance:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5F8421B-AAB3-4495-B84F-AFE0A647E501}' />
    </window>
    <window class='worksheet' maximized='true' name='State Outbount Airport Volume'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682149867523:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1jwssxb0fay8gf1ebsokl1tveyit].[pcto:cnt:route:qk:5]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[State Travel]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[cnt:route:qk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:Calculation_274156682239578119:qk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination code:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:destination name:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport code:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[none:origin airport name:nk]</field>
            <field>[federated.1jwssxb0fay8gf1ebsokl1tveyit].[win:sum:distance:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{938AAE0D-8586-4316-966A-2C20DACBD3FA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Intra/Inter Growth' width='153'>
      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
    </thumbnail>
    <thumbnail height='192' name='Intra/Inter Travel, Quarters and Years' width='153'>
      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
      2yQ1+AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Intrastate Airport Volume Counts' width='192'>
      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
      aG9vRy6XEx4eTlFRETExMahUKlFHaCFxzZXg7PU7+MdvfgfbYCPO9z2ELpbX8fjXv87qFcuJ
      jZy7Seb7lZ/hykWfmJhg2bJldHR0sHTpUr7whS8QEhIiOsOePXvmzJ65RCKRsHbtWnGiqFar
      UavVJCcnz7rDmM1mfD4fERERKJVK5HI5Op2O+Ph4Vq9eTUBAACqVakbHbGlpITMz8yoZzZaW
      FpYuXYpEIrkimuZyodVqxWF1d3f3nOeZXS8fmArhcztxe6W8f6NXkAzMVjsTg62cKmmaE4Mm
      CyAXFBRQWFiI3W5HLpfz5S9/WSxeZzAYePHFF/nc5z6H0WiksrKSgoICzp07N+cT+bmgvLwc
      q9UqbugpKytj/fr1sz7uyZMnxYqURqOR9PR0srKy6Ovro76+nsHBQXbs2DHt47lcLkpLS+nt
      7aWtrQ2Px4Pb7aa4uJienh7a29uRyWSsXbuW1NRU+vr6+PjHP87mzZuprq6e9fnMBVPSoZ3D
      LfzrL/5MgjqC7fc9SJpsgGdePcuSZbk8vCePF196FZ8gkH/PQ9y1LmtGjc0kS1Ov11NaWsry
      5csxmUxotVoaGxvZvXs34+PjXLx4keDgYB5++GHS0tK4fPkyarWarKysWyob1Ofz8de//pX0
      9HSio6NZsmQJlZWVYoHwG3H8y5cvs2LFChoaGhAEgaSkJCorK0lJSSE0NJTc3NwZHdNisdDW
      1kZYWBhKpZLk5GTsdjsNDQ1kZmZSXl6Ox+Nh06ZNYpnZ9PT0WcmizBULXh790qVLrF27dkZ/
      dys5wK1MX18fycnJC7L213QRHWByEjyXzFd83r8O4Ge6zKs8ukwmm5fozHy14+fWZ6o8unWM
      d4+dok93RXbOaRxgcFwgUgn1bV1o26opq6qntb2TmKRUVIHTX6Wdrmy53W7n/PnzOJ1O1Go1
      EomEtrY2Ll++jEqlEisSGgwGEhMT0ev1nDt3joiICEJCQm45efRbCZvNRkVFBYIgiIXvenp6
      qK+vJygoCEEQqKysxGw2Exsbi16vp7q6msjIyAV5T6bKoxu11PaaULr1/PbF1xjtbqRWMwQu
      K2eKSolNTKWtvILY9DSCAm78G2NSCl0mk101JDMYDMTHx7N3714MBgNqtZqCggK0Wi1/+MMf
      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
      RITdbmfr1q3cc889ZGZmuv19YmKCw4cPo1QqGRgYYM2aNYyOjmI2m4mIdBrPSwAAD+xJREFU
      iKCwsJCkpCSqqqpISUnxiCYRdyYnJ6mtrSUmJoa+vj7y8/Px8vJi7dq1SCQSPv30Uzo7O5HL
      5bS1tZGdnY23tzcKhWLORuXcJkD4kjy8T/yWX//rMdJXrUfp50twUDBRkzqc8SnIeyaRSOVc
      bKniV786R8H673HPypu76QYGBujt7aWkpASdTsfg4CCtra1s2bKFhx56CIvF4uoQU1FRQUFB
      AW+//Tb+/v5kZWXx2muv4XA4KCoquikdIu7YbDZqa2vp6elxpZqMjY3R3t5OZ2cn/v7+9Pf3
      Y7PZCAkJYdWqVcCMoZZaraa2tpasrKzbfBXXZ87bo588eZLly5ff0BNErAf4aujr6yMqKupr
      /QLymvcAn4+6eBqxHkBkrnGNPfqtDiN+FWN8leOIfP2ZJRtUoK9LQ2OblpUFdzGp6+GspguA
      pCWpaLvamLQ7WbQki+WpCR4R4XQ6aWhoYHBwkLVr1zI+Pk51dTUrV64kPDwcmMkXOnPmDJmZ
      mURHR3Pq1ClUKhVZWVk0NzfT39/PXXfdhUql8ogmkRmutqEdHR0lPj7eZV+flpZGYOBM+Pvq
      Z6mpqUilUs6dO0dAQACpqal0dXVhMBhYtmzZnDwIu23eJka62VlykoRFaoo/KMY/ZCF+k3om
      FeEsVC8gZWkqdlM/Y3bP7fusVit6vZ6AgADKysrYvXs34eHh7Nixw1WquW/fPhYtWsTu3bup
      rq5Gp9Nx+vRpOjs7KSsrIzAwkIMHD3pMk8gMDoeD4eFhl1FxbW0tOTk5VFdXA1zzWU1NDVKp
      lJycHAwGAwMDAwwMDLBkyRLOnDlzm69kdtzu4is9F8i6cx3py5YTG+iN4B9MTKSayJg4wsNC
      WaCUMuabwF0ZcR4ToVQqycrKoqGhgYyMDORyOStWrEChULjqlKOiojhw4ADh4eH09/ezevVq
      Vq5cycjICIIgUF5eLqZD3wJkMhlLlixBKpXicDhcYc2rB19BEJDL5a7PfH19qa+vZ2BggPDw
      cAwGA1VVVcTExNzmK5kdtwkQFhlFe0sTE2MmLpusBMj/uksSHDY+LqngOxsLQfDcgdlqtbJr
      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
    </thumbnail>
    <thumbnail height='192' name='Intrastate Airport Volume Percents' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State Inbound Airport Volume' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='State Outbount Airport Volume' width='192'>
      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
    </thumbnail>
    <thumbnail height='119' name='State Travel by Weekdays' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Travel, Quarters and Years' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Travel Growth, Quarters and Years' width='153'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
