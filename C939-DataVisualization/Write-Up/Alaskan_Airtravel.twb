<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.ParameterDefaultValues.true...ParameterDefaultValues />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column _.fcp.ParameterDefaultValues.true...default-value-field='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[Calculation_942941227291873295]' caption='Timeline Start' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1988.0'>
        <calculation class='tableau' formula='1988.0' />
      </column>
      <column _.fcp.ParameterDefaultValues.true...default-value-field='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[Calculation_942941227289387016]' caption='Timeline End' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='2008.0'>
        <calculation class='tableau' formula='2008.0' />
      </column>
      <column caption='Timeline Step' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='Alaskan_Airtravel' inline='true' name='federated.1ex5x4w0b3d37t1fbn9u217pkhga' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Alaskan_Airtravel' name='textscan.12vubqb0phvqkw1cc5afv0ax0935'>
            <connection class='textscan' directory='C:/Users/Michael/Documents/GitHub/WGU-Projects/C939-DataVisualization/Write-Up' filename='Alaskan_Airtravel.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12vubqb0phvqkw1cc5afv0ax0935' name='Alaskan_Airtravel.csv' table='[Alaskan_Airtravel#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='destination airport code' ordinal='1' />
            <column datatype='string' name='destination airport name' ordinal='2' />
            <column datatype='string' name='destination city' ordinal='3' />
            <column datatype='string' name='destination state' ordinal='4' />
            <column datatype='string' name='origin airport code' ordinal='5' />
            <column datatype='string' name='origin airport name' ordinal='6' />
            <column datatype='string' name='origin city' ordinal='7' />
            <column datatype='string' name='origin state' ordinal='8' />
            <column datatype='string' name='route' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12vubqb0phvqkw1cc5afv0ax0935' name='Alaskan_Airtravel.csv' table='[Alaskan_Airtravel#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='destination airport code' ordinal='1' />
            <column datatype='string' name='destination airport name' ordinal='2' />
            <column datatype='string' name='destination city' ordinal='3' />
            <column datatype='string' name='destination state' ordinal='4' />
            <column datatype='string' name='origin airport code' ordinal='5' />
            <column datatype='string' name='origin airport name' ordinal='6' />
            <column datatype='string' name='origin city' ordinal='7' />
            <column datatype='string' name='origin state' ordinal='8' />
            <column datatype='string' name='route' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Alaskan_Airtravel.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Alaskan_Airtravel.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination airport code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination airport code]</local-name>
            <parent-name>[Alaskan_Airtravel.csv]</parent-name>
            <remote-alias>destination airport code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination airport name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination airport name]</local-name>
            <parent-name>[Alaskan_Airtravel.csv]</parent-name>
            <remote-alias>destination airport name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination city]</local-name>
            <parent-name>[Alaskan_Airtravel.csv]</parent-name>
            <remote-alias>destination city</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination state]</local-name>
            <parent-name>[Alaskan_Airtravel.csv]</parent-name>
            <remote-alias>destination state</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin airport code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin airport code]</local-name>
            <parent-name>[Alaskan_Airtravel.csv]</parent-name>
            <remote-alias>origin airport code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin airport name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin airport name]</local-name>
            <parent-name>[Alaskan_Airtravel.csv]</parent-name>
            <remote-alias>origin airport name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin city]</local-name>
            <parent-name>[Alaskan_Airtravel.csv]</parent-name>
            <remote-alias>origin city</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin state]</local-name>
            <parent-name>[Alaskan_Airtravel.csv]</parent-name>
            <remote-alias>origin state</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[Alaskan_Airtravel.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Hub Centric Directional Travel' datatype='string' name='[Calculation_942941227247022081]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Hub Origin] AND [Hub Destination] THEN &quot;Intrahub&quot;&#13;&#10;ELSEIF [Hub Origin] AND NOT [Hub Destination] THEN &quot;Outbound&quot;&#13;&#10;ELSEIF NOT [Hub Origin] AND [Hub Destination] THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Extrahub&quot;&#13;&#10;END' />
      </column>
      <column caption='Year Last' datatype='integer' name='[Calculation_942941227289387016]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Drop the very first year (2009) because it seems incomplete&#13;&#10;{FIXED : MAX(YEAR([date])) - 1}' />
      </column>
      <column caption='First Year' datatype='integer' name='[Calculation_942941227291873295]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Drop the very first year (1987) because it seems incomplete&#13;&#10;{FIXED : MIN(YEAR([date]))+1}' />
      </column>
      <column caption='Increase Year' datatype='real' name='[Calculation_942941227293454352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] + [Parameters].[Parameter 3] &gt; [Calculation_942941227289387016]' />
      </column>
      <column caption='Hub Centric Travel' datatype='string' name='[Hub Centric Directional Travel (copy)_942941227255353346]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ([Hub Origin] AND [Hub Destination]) THEN &quot;Intrahub&quot;&#13;&#10;ELSEIF ([Hub Origin] OR [Hub Destination]) THEN &quot;Interhub&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot; AND [destination state] == &quot;AK&quot;) THEN &quot;Extrahub&quot;&#13;&#10;ELSE &quot;Interstate&quot;&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Alaskan_Airtravel.csv' datatype='table' name='[__tableau_internal_object_id__].[Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Destination Airport Code' datatype='string' name='[destination airport code]' role='dimension' type='nominal' />
      <column caption='Destination Airport Name' datatype='string' name='[destination airport name]' role='dimension' type='nominal' />
      <column caption='Destination City' datatype='string' name='[destination city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Origin Airport Code' datatype='string' name='[origin airport code]' role='dimension' type='nominal' />
      <column caption='Origin Airport Name' datatype='string' name='[origin airport name]' role='dimension' type='nominal' />
      <column caption='Origin City' datatype='string' name='[origin city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_942941227247022081]' derivation='None' name='[none:Calculation_942941227247022081:nk]' pivot='key' type='nominal' />
      <group caption='Extrahub' name='[Extrahub]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[Calculation_942941227247022081]' member='&quot;Extrahub&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='Hub Destination' name='[Hub Destination]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[destination airport code]' member='&quot;ANC&quot;' />
          <groupfilter function='member' level='[destination airport code]' member='&quot;FAI&quot;' />
          <groupfilter function='member' level='[destination airport code]' member='&quot;JNU&quot;' />
          <groupfilter function='member' level='[destination airport code]' member='&quot;SEA&quot;' />
        </groupfilter>
      </group>
      <group caption='Hub Origin' name='[Hub Origin]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[origin airport code]' member='&quot;ANC&quot;' />
          <groupfilter function='member' level='[origin airport code]' member='&quot;FAI&quot;' />
          <groupfilter function='member' level='[origin airport code]' member='&quot;JNU&quot;' />
          <groupfilter function='member' level='[origin airport code]' member='&quot;SEA&quot;' />
        </groupfilter>
      </group>
      <group caption='Interhub' name='[Inbound]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Calculation_942941227247022081]' member='&quot;Inbound&quot;' />
          <groupfilter function='member' level='[Calculation_942941227247022081]' member='&quot;Outbound&quot;' />
        </groupfilter>
      </group>
      <group caption='Intrahub' name='[Intrahub]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[Calculation_942941227247022081]' member='&quot;Intrahub&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <drill-paths>
        <drill-path name='Destination'>
          <field>[destination city]</field>
          <field>[destination state]</field>
        </drill-path>
        <drill-path name='Origin'>
          <field>[origin city]</field>
          <field>[origin state]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.70821' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.29179' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_942941227247022081:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Extrahub&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Outbound&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Intrahub&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Inbound&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227278827526:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[sum:Calculation_942941227278827526:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ex5x4w0b3d37t1fbn9u217pkhga]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Alaskan_Airtravel.csv' id='Alaskan_Airtravel.csv_26E427030ED34F79B8EFED1B79EFD65D'>
            <properties context=''>
              <relation connection='textscan.12vubqb0phvqkw1cc5afv0ax0935' name='Alaskan_Airtravel.csv' table='[Alaskan_Airtravel#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='destination airport code' ordinal='1' />
                  <column datatype='string' name='destination airport name' ordinal='2' />
                  <column datatype='string' name='destination city' ordinal='3' />
                  <column datatype='string' name='destination state' ordinal='4' />
                  <column datatype='string' name='origin airport code' ordinal='5' />
                  <column datatype='string' name='origin airport name' ordinal='6' />
                  <column datatype='string' name='origin city' ordinal='7' />
                  <column datatype='string' name='origin state' ordinal='8' />
                  <column datatype='string' name='route' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='&lt;'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Airtravel' name='federated.1ex5x4w0b3d37t1fbn9u217pkhga' />
          </datasources>
          <datasource-dependencies datasource='federated.1ex5x4w0b3d37t1fbn9u217pkhga'>
            <column caption='0' datatype='integer' name='[Calculation_942941227291398158]' role='measure' type='quantitative' user:unnamed='&lt;'>
              <calculation class='tableau' formula='0' />
            </column>
            <column-instance column='[Calculation_942941227291398158]' derivation='None' name='[none:Calculation_942941227291398158:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/left-triangle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227291398158:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E8A7E9F6-F608-4979-BCB7-BCE9C39A08B9}' />
    </worksheet>
    <worksheet name='&gt;'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Airtravel' name='federated.1ex5x4w0b3d37t1fbn9u217pkhga' />
          </datasources>
          <datasource-dependencies datasource='federated.1ex5x4w0b3d37t1fbn9u217pkhga'>
            <column caption='0' datatype='integer' name='[Calculation_942941227291246604]' role='measure' type='quantitative' user:unnamed='&gt;'>
              <calculation class='tableau' formula='0' />
            </column>
            <column-instance column='[Calculation_942941227291246604]' derivation='None' name='[none:Calculation_942941227291246604:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/right-triangle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227291246604:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{73F3FE3E-6FD8-4B94-8569-5F2FB815D42C}' />
    </worksheet>
    <worksheet name='Extrahub Travel'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Airtravel' name='federated.1ex5x4w0b3d37t1fbn9u217pkhga' />
          </datasources>
          <datasource-dependencies datasource='federated.1ex5x4w0b3d37t1fbn9u217pkhga'>
            <column caption='Hub Centric Travel' datatype='string' name='[Hub Centric Directional Travel (copy)_942941227255353346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Hub Origin] AND [Hub Destination]) THEN &quot;Intrahub&quot;&#13;&#10;ELSEIF ([Hub Origin] OR [Hub Destination]) THEN &quot;Interhub&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot; AND [destination state] == &quot;AK&quot;) THEN &quot;Extrahub&quot;&#13;&#10;ELSE &quot;Interstate&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[destination airport code]' derivation='Count' name='[cnt:destination airport code:qk]' pivot='key' type='quantitative' />
            <column-instance column='[origin airport code]' derivation='Count' name='[cnt:origin airport code:qk]' pivot='key' type='quantitative' />
            <column caption='Destination Airport Code' datatype='string' name='[destination airport code]' role='dimension' type='nominal' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Hub Centric Directional Travel (copy)_942941227255353346]' derivation='None' name='[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]' pivot='key' type='nominal' />
            <column-instance column='[destination airport code]' derivation='None' name='[none:destination airport code:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin airport code]' derivation='None' name='[none:origin airport code:nk]' pivot='key' type='nominal' />
            <column caption='Origin Airport Code' datatype='string' name='[origin airport code]' role='dimension' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]'>
            <groupfilter function='member' level='[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]' member='&quot;Extrahub&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:origin airport code:qk]' palette='orange_blue_white_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#b07aa1' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:destination airport code:qk]' />
              <text column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:origin airport code:nk]' />
              <text column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:destination airport code:nk]' />
              <color column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:origin airport code:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BD0D6F69-EF7B-4B53-9A8B-4D6BF55646C2}' />
    </worksheet>
    <worksheet name='Extrahub Travel All Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Airtravel' name='federated.1ex5x4w0b3d37t1fbn9u217pkhga' />
          </datasources>
          <datasource-dependencies datasource='federated.1ex5x4w0b3d37t1fbn9u217pkhga'>
            <column caption='Hub Centric Travel' datatype='string' name='[Hub Centric Directional Travel (copy)_942941227255353346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Hub Origin] AND [Hub Destination]) THEN &quot;Intrahub&quot;&#13;&#10;ELSEIF ([Hub Origin] OR [Hub Destination]) THEN &quot;Interhub&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot; AND [destination state] == &quot;AK&quot;) THEN &quot;Extrahub&quot;&#13;&#10;ELSE &quot;Interstate&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[route]' derivation='Count' name='[cnt:route:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Destination Airport Code' datatype='string' name='[destination airport code]' role='dimension' type='nominal' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Hub Centric Directional Travel (copy)_942941227255353346]' derivation='None' name='[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]' pivot='key' type='nominal' />
            <column-instance column='[destination airport code]' derivation='None' name='[none:destination airport code:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin airport code]' derivation='None' name='[none:origin airport code:nk]' pivot='key' type='nominal' />
            <column caption='Origin Airport Code' datatype='string' name='[origin airport code]' role='dimension' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]'>
            <groupfilter function='member' level='[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]' member='&quot;Extrahub&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]'>
            <groupfilter from='1988' function='range' level='[yr:date:ok]' to='2008' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]</column>
            <column>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:route:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='size' field='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:route:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:route:qk]' />
              <size column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:route:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:origin airport code:nk] / [federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:destination airport code:nk])</rows>
        <cols>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{2C8EAA3B-CEC4-4DED-BE09-887F05E0D1CC}' />
    </worksheet>
    <worksheet name='Hub Centric Directional Flights'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Airtravel' name='federated.1ex5x4w0b3d37t1fbn9u217pkhga' />
          </datasources>
          <datasource-dependencies datasource='federated.1ex5x4w0b3d37t1fbn9u217pkhga'>
            <column caption='Hub Centric Directional Travel' datatype='string' name='[Calculation_942941227247022081]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Hub Origin] AND [Hub Destination] THEN &quot;Intrahub&quot;&#13;&#10;ELSEIF [Hub Origin] AND NOT [Hub Destination] THEN &quot;Outbound&quot;&#13;&#10;ELSEIF NOT [Hub Origin] AND [Hub Destination] THEN &quot;Inbound&quot;&#13;&#10;ELSE &quot;Extrahub&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[route]' derivation='Count' name='[cnt:route:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Destination Airport Code' datatype='string' name='[destination airport code]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_942941227247022081]' derivation='None' name='[none:Calculation_942941227247022081:nk]' pivot='key' type='nominal' />
            <column caption='Origin Airport Code' datatype='string' name='[origin airport code]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227247022081:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Extrahub&quot;</bucket>
              <bucket>&quot;Intrahub&quot;</bucket>
              <bucket>&quot;Inbound&quot;</bucket>
              <bucket>&quot;Outbound&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]'>
            <groupfilter from='1988' function='range' level='[yr:date:ok]' to='2008' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227247022081:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:route:qk]</rows>
        <cols>([federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok] / [federated.1ex5x4w0b3d37t1fbn9u217pkhga].[qr:date:ok])</cols>
      </table>
      <simple-id uuid='{726B8427-D13F-4509-8BC3-B018567BE350}' />
    </worksheet>
    <worksheet name='Hub Centric Flights'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Airtravel' name='federated.1ex5x4w0b3d37t1fbn9u217pkhga' />
          </datasources>
          <datasource-dependencies datasource='federated.1ex5x4w0b3d37t1fbn9u217pkhga'>
            <column caption='Hub Centric Travel' datatype='string' name='[Hub Centric Directional Travel (copy)_942941227255353346]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Hub Origin] AND [Hub Destination]) THEN &quot;Intrahub&quot;&#13;&#10;ELSEIF ([Hub Origin] OR [Hub Destination]) THEN &quot;Interhub&quot;&#13;&#10;ELSEIF ([origin state] == &quot;AK&quot; AND [destination state] == &quot;AK&quot;) THEN &quot;Extrahub&quot;&#13;&#10;ELSE &quot;Interstate&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[route]' derivation='Count' name='[cnt:route:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Destination Airport Code' datatype='string' name='[destination airport code]' role='dimension' type='nominal' />
            <column caption='Destination State' datatype='string' name='[destination state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Hub Centric Directional Travel (copy)_942941227255353346]' derivation='None' name='[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]' pivot='key' type='nominal' />
            <column caption='Origin Airport Code' datatype='string' name='[origin airport code]' role='dimension' type='nominal' />
            <column caption='Origin State' datatype='string' name='[origin state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]'>
            <groupfilter from='1988' function='range' level='[yr:date:ok]' to='2008' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:route:qk]</rows>
        <cols>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{47ED9CA3-1720-4E16-9A29-3A17981DD27A}' />
    </worksheet>
    <worksheet name='Timeline'>
      <table>
        <view>
          <datasources>
            <datasource caption='Alaskan_Airtravel' name='federated.1ex5x4w0b3d37t1fbn9u217pkhga' />
          </datasources>
          <datasource-dependencies datasource='federated.1ex5x4w0b3d37t1fbn9u217pkhga'>
            <column caption='0' datatype='integer' name='[Calculation_942941227278635012]' role='measure' type='quantitative' user:unnamed='Sheet 4'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='0' datatype='integer' name='[Calculation_942941227278827526]' role='measure' type='quantitative' user:unnamed='Sheet 4'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_942941227278635012]' derivation='None' name='[none:Calculation_942941227278635012:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_942941227278827526]' derivation='None' name='[none:Calculation_942941227278827526:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]'>
            <groupfilter from='1988' function='range' level='[yr:date:ok]' to='2008' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227278827526:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227278635012:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227278827526:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227278635012:qk] + [federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227278827526:qk])</rows>
        <cols>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{B19A4C09-6BB5-4592-9E8E-79454B309EA8}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Hub Centric Directional Flights'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227247022081:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[io:Inbound:nk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[io:Interhub:nk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[io:Intrahub:nk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Calculation_942941227247022081:nk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74927BFD-C395-481D-BA40-3027D1F6B88F}' />
    </window>
    <window class='worksheet' name='Hub Centric Flights'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card pane-specification-id='0' param='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4CE78AE-7E27-40FC-AEB2-425198FD0586}' />
    </window>
    <window class='worksheet' name='Extrahub Travel All Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:route:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:route:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:route:qk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:destination airport code:nk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:origin airport code:nk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:route:nk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B4E30CFE-1E41-4449-90E1-493FCC711906}' />
    </window>
    <window class='worksheet' name='Extrahub Travel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:origin airport code:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[Extrahub]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[cnt:origin airport code:qk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:Hub Centric Directional Travel (copy)_942941227255353346:nk]</field>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[none:destination airport code:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{876CA50B-390D-46B5-BF29-CE675EAA2068}' />
    </window>
    <window class='worksheet' name='Timeline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ex5x4w0b3d37t1fbn9u217pkhga].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AE08923-2684-42A7-9ECE-4D6D6826AAA7}' />
    </window>
    <window class='worksheet' name='&lt;'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{948B43EB-57E8-4920-9509-2931C5F7FD7B}' />
    </window>
    <window class='worksheet' maximized='true' name='&gt;'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{934715EB-3D95-471C-BE80-5E06F6C0301E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='&lt;' width='120'>
      iVBORw0KGgoAAAANSUhEUgAAAHgAAADACAYAAADP/afKAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAB2ElEQVR4nO3RwQnAMBDAsLb7z5vvdYoQUKwJDH5nZp6wvtMB2avBuAbjGoxrMK7BuAbj
      rh+81jqdsNX1g3UNxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY9wOm1whe8sLlaAAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='&gt;' width='120'>
      iVBORw0KGgoAAAANSUhEUgAAAHgAAADACAYAAADP/afKAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAB2ElEQVR4nO3RwQnAMBDAsLb7z5vvdYoQUKwJDH5nZp6wvtMB2avBuAbjGoxrMK7BuAbj
      rh+81jqdsNX1g3UNxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bc
      g3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY12Bcg3ENxjUY9wOm1whe8sLlaAAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Extrahub Travel' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d3hcV5n4/zn33umaUe+WXGTL3bETx4ljp/eEJLSQQu+wy7LZhRAWFgLL
      70dggSxtCeyGEJaeAoEE0klz7Lj3XlSt3jWaeu893z/GTVEbSTP3juR8nsePbc2de17NnPee
      c94qpJSSt3iLsxTFbgHe4i3s5C0FeIuzmrcU4C3Oat5SgLc4q3lLAd7irEazW4BUkTBmSYiH
      IdKLjAXBiCVeVDSEMwu8eaC5AYEQwk5x3yJDmLIKIKWEaB9my05k2x5k1xFkbwOEu0Z/oysb
      EZiByJ+LKF6GUnIOuHPeUoizFDGV/ABSSoj0YB57EbPuVWT7fpDmJO8qEPnVKLMuQZlzJXgL
      3lKGs4gpoQBSSmTXEcy9j2HWvQZGND0DKRpK5VqUBTcjipe9pQhnARmtAFJKZG89xtYHkQ0b
      AOtEFSXLUVd+ApFfPeUUQUqJqccZaGsh2NJItLeLSG838VAIU4+jqCqq04XTn40nNx9vYQmB
      GbNQHU6EcnbZRTJWAWQ0iLHr15j7/gjSsEcIoaDMvRb1vI8j3Nn2yJAE0jQJd3fStPk12vZs
      o+PgHnpqD2NEI0nfQygq/vJK8qoWULT0PGZefA2+otJprxAZpwBSSmTbXvR134b+JrvFSeDJ
      Q1v7BUTZyoxZDaSUBJsbOfbCX6h77Tk6D+1LwXnoDIQgd3Y1lWuvouradxCYMStjfvdUklEK
      IE0Dc9/jGFsftO+pPxJCQVl6O+ryDyIU+4xnpq7TsOHvHHjitzRv24A09PQPKgTFy1ay6N0f
      onLNlSiaI/1jWkTGKIDUoxgbvo959Dm7RRkVUbk2sRo4fZaOa+o6tS//jZ2/eoCemkOWjn0m
      WSUzWHrnJ5h3w62oTqdtcqSKjFAAqUfRX/4PZOMbdouSFKJ4KdoV30C4/GkfS0pJ05bX2fyT
      ++g+eiDt4yVL9swqVn7qHiouuhwhpu45wXYFkHoU/aWvIY9vslOMcSOKlqBd9f8nPMxpYqC9
      hS0PfJtjLz4J9j+nhqXioiu58F++RlZxmd2iTAhbFUCaOvqr30TWvmKXCJNClK1Eu/IbCDW1
      WwEpJfXrnmfD/fcS7mxL6b3TgTMrwOp//Tqzr7xpyh2UbVMAKSXGtocwd//WjuFThlJ9I+rq
      u1K2DTDiMbb89D/Z99jDGfvUH4n5N9/Bqs98Gc3tsVuUpLFNAcz69egv3Zta050tCNQ1n0ed
      d92k7xTt6+Hlr/8zTZvXpUAueyhaupLL/+NHePOL7BYlKWw5vciBDvT190+DyQ8gMTY/gOxt
      nNRd+psbeeau903pyQ/QtnsLT3/2Tvoaa+0WJSksVwApTYwtP4VIt9VDp49YEH3jj5DmxHwX
      /c2NPPe5D9J1ZH+KBbOHvoYanv7snfTUHrZblDGxXgGatmLWvGz1sGlHNm3BrHt13O8LdbTx
      3Oc+OGWemMkS6mjluc9/hP7mya2M6cZSBZCmjrHt51gZ1GYlxrZfIPXk42+i/X28+OVPTbvJ
      f5KBtiZe+MJHifRm7mpvqQKY9euRnZm/LE6Y/uOYR5LzZJuGzvrvfImO/TvTLJS99NQd4eWv
      fRYjHrNblGGxTAGkaWDu+YNVw9mGsf8JpBEf9RopJXv/8HNqX37aIqnspXnrenb84odkQNDB
      EKxTgM6DyI7MceWnjd46ZNOWUS9p272V7Q/9wCKBMoPdv/0ZxzdmnsPTEgWQUmIe/KsVQ2UE
      xpFnR3zaxcMDvP6dL2HE0pTVlqFI02TD/V8l2tdrtyiDsGYFMKKYjRssGSoTkMc3Q7Rv2Nd2
      /fqn9NYdtViizCDYcpxtD37PbjEGYc0K0L4fIpml+WlFjyBbhh5ue+qOsveRh2wQKHM49NQf
      6Di4224xTmGJAphTLNIzFZjHNw/6v5SSbQ/eP640xemIqets/Z/vZsyBOO0KcDLF8WzDbNs9
      yDPceXA39euet1GizKF563pad41uKLCK9K8ARgzZU5f2YTKO/haI9QOJh8Du3/0v0siwNE+b
      kKbJrl//JCNWgfQrQKgdYsG0D5NxmHFkfzMAwaYG6te9YLNAmUXT5tfpPnrQbjHSXxpR9llb
      2eH1Qz3EdBOHphDTTaSE82b72XysD00RLKv0k59lTVK37DsOhQs5/MzjmBnqCbULaRoceuoP
      XHjXvbbKkf4zQKgj3UMMIm5IFs/Ioi+sE46ZZHs0ghGDAr+TLLdm7bIb6sCIxzj67J+sG3MK
      UfvK0+g2GwXSvwU6sQ+2Ct2UtPTGuGJRHlcsysXjUqhpD9Mb0plV4OZYW9gyWWS0l7Y92wi2
      HLdszKlEuLOd5q3rbZUh/StA3FoNX1TmY+kMHy5NcKA5RHdQZ1VVNsXZTvY1DTC/1MJyJnqE
      xjdetm68KUjD+hdtHT/9FZ4sLnBVlus69e8VM0+XLVlY5mNhmbW1fKQpaVj/d0vHnGo0rH8J
      0zBQVNWW8dO/BbKxiprdhDrb6W+qt1uMjCbc1U5vvX2hIWlXAOHwpnuIU+w7HiRumLy0r4tw
      zOBQS4i/7ejghb1dxA2TTUd7eWlfF70hC8oJAp3HjmLGRw+NPtuRpknH/l22jZ/+x7MnN+1D
      nKS1L47LEaGpJ0ZNexhVERT4HTg0hV31QTRVcM5MP16XNTGAXY0tlowz1ek8vI95No2d/hXA
      V5zuIU4xu8DN+sO9rJztZ0ddkLJcF9vr+tlW20eh34mqCA40DbC3ccASeXpaMzcVMJPoqbHP
      IZb2FUAEygGBFXnAZbkusj0aswo8HG4J49IUrlych25IhICuYJy4IZlTZE3hpmBwOpR9ST99
      jfaFyqR/C+Tyg68ABtrTPpRTU7j53EIA3raiAIC5xafPIBX57rTLcBKp+QiF7Y91AShaci6a
      20NsIIip6xQtWUHTptfw5BeRN3chB/78G1vjlKL9vejhEJrHuvPiSdK/BVI0RJ5dOzz7iDty
      MczMqJPpzPLTtOV13Nk5dB3eS7C5kb7jdfQ21NB5aI/tQXqmHicaHD6BKN1YchpUSpZbMUxG
      YebMx9StsTaNhVA1hKIilMG29qIlK2jbs80mqU4jDYN4yJpz2ZuxRgEqLiBxDjiLKF6BNDPj
      DNC+byfF55x/arJ31xxCdbkx43GKz1k1RDGsRpqmbTnS1nip/GWIvCpk1xFLhrOdrGJkblXG
      1D6NdHfQ0n06KHGgNRGh+1aYhkUrgBAKyuzLrBgqI1BmXYrq8k77DospQwgUzZ6IAcu+IaXq
      GkhxI4mMRNFQ5l6H4nDZvrUA8OQXUbZyLXlzF5JVWkHe3IUAzL7iRjz5hZSvupjcOfNtlVEI
      BdVhz9yw7hHlyUOZdZllw9mFKF+FyK7E4fWi2PSlnkn+vEU0bVmHN78o0RS7oBhXdi5ZpTNw
      +bMJdbQx0NZsq4yKpuHwpq/V1KhjWzWQEAJlyW2gTJ8Wm0MQCurS2xFC4PD4cPrs+VKH46RH
      Ihbso3DhOfQcS3Sa1DxeVJd1/pHhUF1uXAF7GpFbukkVOTNR5lxh5ZCWIipWIwoXnfp/Vkm5
      jdIk6D52kLLz1xLt6SLS00Xn4X2YhsFAewuxYD/OLD/ubOvitYbDW1BsW+9hS08eQgjUFR/G
      rF9veaZY2tHcqOd+dFCTuEDFbNvLfwy0NQ/Z4jRtfu3Uv0MdrVaLNITsyjm2jW25mUL4ClFX
      fNDqYdOOuuR2lJyZg36WV7XQJmmmFicP5nZgi51OmX8TomylHUOnBVGwAGXJe4b8vGDBUhuk
      mXrY+TnZogBC0dDWfB68BXYMn1qcfrSL70ForiEv5cyehzMrYINQUwfV6Tr7VgBIbIW0S/8d
      1KETZ8qgaGhrv4DIrhz2ZafPT+Gisy8OajzkzV1ka0tVW12VSvFS1DWfA2G/w2jcCAX1/E8h
      KlaPetmM1ZdbJNDUZMaFl9o6vu2+emX2FagXfnaKKYFAXf5BlAW3DLL6DEflmiszwiGWiQhF
      pfLiq22VwXYFEEKgVN+IuvquqREqoWio538SZdmdCDH2x5dVUk7R4hUWCDb1yJu7kNzZ1bbK
      YLsCwAklmHc92uVfB6d/7DfYhcOLuvYelEXvTmryn6T6ptvSKNTUZd6Nt9oeMJgRCgAnlGDG
      KrQbfoDIz7wMMpEzC+26+1HnXDHmtufNzLzkWryFJWmSbGriCuQw56qb7BYjcxTgJErOTLTr
      /ithV8+EuCFFQ1lwC9oNP0CZoGJqLjcL3v6+FAs2tZl343tw+e2J/zkTITOhS8EwSCmRnYcw
      tvzPiX5b1osp8uehnv9pRPGycT/130ykt5s/vf9aIj2dKZJu6uLwZfHOXz2Pt2B486eUElOC
      bpoIBJoqUCb5+Y9ExirASaRpIOtfx9j9W2TnEaxQBJEzG2Xp7SizLkGk8GC++3f/y5YHvpWy
      +01Vlr3/Hzjv45879X/dMGnqjXC0fYDG7jAd/VHCcQPdlAjAoSkE3Bol2W4qc71UFfnI8Tgm
      /VCCKaAAJ5GmgWzdhXHgL8jGjWCkOIdUdSJKz0WtvhFRvjKlE/8keiTMXz5+y1nbJhXAV1zG
      23/xVxw+P92hOFtqu9nR2EPXQPIlJFVFMDPPy4Vz8lhY6sehTnwnP2UU4CRSSgh3YjZuwmx8
      A9m+D8ITrMDmykYULkApX4VSsRp8RSl5qoxG4xuv8MIXP5YxCfOWIgSX3fsDitZcywv729ha
      103MmNz0K8hycu3iYhaXBSa0TZpyCvBmpB5B9jUiOw8n/u5vgXAXRPuR0b5E2LURA6GA04fI
      KkEULECULEcpqAZfsaWpi1JK1v/nlzj010csGzNTmHXZDRR98hv8ZVcLveHUloxZVOrnnSvK
      yXKPL8J/yivASaQ0obch0Z60fT+y6ygy1AaxEJjDLa8CNBc4/YjADET+PJSiJYiiJQh3eq0T
      0f5envrUu+lrOJbWcTIJT2EJnrt+yhvtIm2nuFyvg/ddWEl5TvKlL6e0AkhpInvqMOteRda9
      huytn3xDDs2DyK9GmXMFSuXFaVOG9v27eOau96GH7SkIZSXC4ST6/vuoCcxN+1geh8p7L6hg
      blFy6ahTUgGkEUc2b8XY8wiybU/6utA4fIkSJ4tuReQMH/E5GY4+9wSvffPuaX0ekELQecUn
      6Fx6g2VjehwqH107ixm5Y68EU0oBpDSRTVsxdjyM7Dhg3cCqMxG0t/QORGBGym4rpWTn//2Y
      7T//fsrumWkMnP92Gi/6YOIMZiF5PiefvnQO/jHOBFNGAWRfI/rmnyIb38AOpxiQiAVafBvK
      4ncjtNRUUpCmwaYff5N9jz2ckvtlEtmX3ML28z5MXNpTFnNpeYA7V1WMatnLeAWQ0sQ89BTG
      tp9nTMd5kTc3ERSXm5pkbtMw2PyT+xJKkNlfR9LMe9vtHLjgwxzptK8PsADed2Eli8tGzsrL
      aAWQsQGMjT/EPPYitj31R8LhRV31GZSqa1LiO5Cmyc5f/YQdD//Q9nLlk0IoLLn9Y/hv+SQP
      v9FotzSUBFx85vIqtBGcZRkXDHcSOdCG/vw9mMdeIOMmP0A8hLH+uxjbHkSak5+wQlE45wP/
      yMVf+o4tjSJSgep0sfpfv855n7ybV49kRnuolr4o+1tGLsGTkQog+5uJP3c3smO/3aKMjjQx
      9/weY8P9SCM26dsJIai6+hau/+Fvba2VMxGySmdw3fd/zYJb7qRjIM6xjswx72481jXiaxmn
      ADLYQvyFL0Kf/ctnsphHnsHY8H2kmRrvZsH8pdz4wGPMv+UOhE0NpJNGCOZe/25u+p8nKFpy
      LgC7GnttFmowdV0hesPDxxpllALISC/6i1+eUpP/JObRZxPboUn2BJBSEorECQsXSz/9Fa78
      1oPk2Jw2OBKBitlc9a3/Ze09950qryilZH/zxKr+SSnpbTtOX0czUkr6OpqJBPuQUtLf2Uqo
      d+Qn+WjEDcnhtuENKBnTxl0acfR19yF7au0WZcKYex9D+MtR548v0ykS09l6uIU39jexr76D
      vlAM3TBRFYHH5aBy7b+SW7qenJ1Pog7Yv7d2BXJZfNtHWHzrh9Hcg51NMcOktW+Clh8paW84
      gjeQS1vtQbyBXDyBXLqb61CdLhxON97svAndurErzMqZQ2ugZoQCSCkxdv0aeXyz3aJMEomx
      +YFEXFHBgjGv1g2TF3fU8fuX99PaPfyeORTV6ewLg7YI5/I5LOrdxYLmNzA6m1It/Jh4C0tY
      cMudzL/5dtw5+cNe0zUQRzcnbrQI9SSe8oUzq2mvO4yUkkiwj/IFK6jdtYHc0ol55Fv7h1fK
      zFCAlp2Ye35vtxipwYiiv/5dHDf8COEY2RXfNxDle49vYvOh5LvJx1Q3O/JW0TprLe+tDKNv
      fY6W7W+ktb+W4nBQvOx8qm+8lcq1Vw954r+Z7tDkjAG5pZVULDqPUF83/vxielobyS4so6Ph
      CEY8+ZyBNzNS9KntCiDjYfRNP4QUHSAzgp4ajF2/Rjvv48O+3NkX5t7/W8exlp4J3b65L8bP
      jnr4j89+hzXuOI0bXqJx46u07dlG5IxeYBNF83gpPXc15eevpeKiK/EVlSZdvSEan8QZSAjK
      qpcB4DmRL5w/Yzaq5iQ60E/RzImfhWK6iWFKVGWwz8Z2R5ix81cYOx62U4T0oLrQbvxvlNzZ
      g34cjet85Zevsad28hM14HXyX5+6ktK8ROSjHgnT11hL+/6ddB3eT9/xOgZam4gN9BEPDWDE
      okjDSLRMVVXiqgvd4cGZW0hu5WxK582nctkK8uctxBXImZBMW+u6eXTr8Un/bqnG51L5t+vm
      D3GI2boCyIF2jH2P2SlC+jCiGDt/ibj03kGe4t+/vD8lkx+gLxTjv/64mfs+cimqoqC5PeTN
      XTio2Kw0TYx4DDMeYyAcZW99F9vruqnrDNEXlRiqBoqKQOAwFbIPOpjT08qa+ZL5pdkjelBH
      wjmJ9MR0oinKkKc/2KwAxv7HMya+Jx3I+teRnQcRJw7ETZ1Bnlh/OKVj7KntYN2eRi5dNvzh
      UCgKQV3h+T2dvHaglWDk5FbTefrblyCRROMGbXGDtr4IbxxuJ9fn5KqlZVy2qASPM7mp4vdM
      bkrFo2GObVuHNzsXf34J8WiYnpZGwv09zF99Na4J9hLLcqlDQlaklPb5AWSkD/Pw03YNbw3S
      xNz3GCd3mX/bdJRoPPVxPk+sP4w5zE5WN0ye393EVx/dxtM7jp8x+ZOjeyDGo2/U8tVHtrO9
      NrlyLgW+yVX7FoqKlBKXN4A0TRRVo6x6GUWzqic8+QHys07LJaXkcHMf331yj30KYB57YVo/
      /U9i1q2DgTZ0w+T1velx8B1q7KK5c/BnGYrq/OS5A/zu9WPjnvhvpjMY5cfP7ucP62vQjdEP
      uV6nSp534gXNBILZy1fT09qIYaTOMHIyOSYYifPzvx/iW0/sYl9jjz1bIGkamEeesWNo6zHj
      mDV/53jRDbT1htIyhAR2HmujvCBRV7U3FOO//rqX+s7UxeNICc/uOk57f4RPXjkfhzZCdKUi
      mFPoo6tuYhYuoSh0Hq8lf8Zs/PnFICWKqqFqFROWXQBVBT4auwZ44NkDNHWf/h5sWQFkTy2y
      ++ypjWPW/J2Gtp5RQ/0rCv0U53gRAioLA+T53bgcKopIWHsEjLoPr2vtAyASN/j+31I7+c9k
      W00nD79yGHMUZ9eS8onnUSuqStm8peSXz8bp9uL0+NCcLtyT6LSTn+UkEotz/5N7Bk1+sEsB
      GjfaMaxtyO4aetoaRnxdVQSF2V5K8rIozc0i1++mqjSHsvwsyvL9XLCgjFy/m4WVw3tfAXpD
      EaSU/N+rR6hLcyTmhsPtPL97ZE/03EIfgXGWJ0knM3LcPPDsAboHhjrpLFcAKSXm8U1WD2sz
      EqN5x6hXFOV4Kcz2EI7pzCjw43E5aOzopzjXR1NnkIrCAJHYyHtigWDLsQ42Hm5PtfDD8sdN
      tTSOsMpoqsLqOROL2Uk1qoCdR9vpDA7vLbd+BdAjyK4jlg9rNzkDB0d9PRLT6RmIEvA6OdLU
      TUw3cDs0Sk4pgJ/GjpGjLD0uB4++UWtZ6lDckDzyRs2Ir184J3/MhHQrCIWitHSPfPayXELZ
      fxz0sNXD2k6paEEgSZR7HYxhSjYfasE0JeGYjiISVypC8Ny2GuK6ybNbE3+PRGNPhI6ItU79
      vQ09HG3to6p46P7c41S5fkkxj2yxzyusKdDeP/pcs34L1D3yU2M6M8M9QMEomY4DkTjhE1sc
      U0qkTCjGyUk/2uQH6AhZH0slgb/vbR7x9eUVOaMmpKcTVRHku5RRD+tgywpgbRjv64d6yPFq
      DEQNdtYHqcxPlDPJ9WnEDcmKmX68rvRnXWkyypoqH0/sTr0p1ONxIYUyzNqSfnbUdhHTDZza
      0M9QEYJ3nVtGZzBKS1/6IlaH47LqAp7fVj/mddafAUKpiYNJlvrOCEdaw5w/J8DSiixWVQXI
      cqsMRA1CUcPSdPu3Lc3B5Ui9si2eXTzuyhQXVRdR4HcxqzALl6awtCKXC+YWUuh3s3hG8oFw
      4ZhBbfvIDk2vU+MDq2eSMwnn2Hi5qCqPqnwv7Ukk5li/BYpOLF1uopTluPC5VLoGBm8RVsz0
      s73OWllKvDpvvyi1/c+WziqkvGh8dndNEbT2hikMuFEVwUXVRRxo6qFnIEZhthtlmKCx0RhN
      ASBRpe3jF8+mJJCaYmIjIYDL5xdy49JSjrT0JfUe61cAw9pCSYtn+LhsYS66YVJd4sXnUllY
      5iPg1XjHyiJcI3g004E049x+2UKWzCxIyf1yslzc9Y6VdPSPb3tRWeDDpSnk+VxICbsbephV
      6Ackzd0hysZRXRmgrXfs7zTf5+STl8xO25nArSncurKcaxYVoSpiTKU8ifV2KosLwRb4E51e
      irNPB0PlZSUm/bwSi+vvGDouh8YXb7+QLz/86inv7UTwe5x85c41lOZnEYyML1OqvS9KfyR+
      qpb+QERHN0x00yQY0dlVP76842TH9zgTlZu31/fw/L42ekao1DBeFpX6uX5JCYX+099x5wgp
      kG/GegVQ7bcN24aa2Afn+T18+6OXcf/jm9l0cGQrykjMLA5w97svYE5pYq9ujDMHt//EhD0z
      SK7njFTG5p7xmanHM74iBOfNzGVxWYCNNV1sONZFT2j8iiAEzC3M4uJ5+cwryhpyBgrHkou6
      tXw2CofXkoOnKSU76vopCjhp7IqSn+Ugqps0dEZwOxTOnxNg/eFePE6Fi+blDJsskWqE4/SK
      E/C6+Mp71/Dyzjp+9eJe2nrGtg75PU5uunAu71o7H4/r9FfnTsPBejw4J7CNdDtULq0u5KKq
      fI60BdnX3E9NxwCdwdiI88OlKZRmu1lQ4mdpeYA8n3PEw3+y36b1j2O3NS5yRQja++JE4yZR
      XVLfGaE0x8m5s/xsqeln09E+zp8ToKHLQvOce7B1RVUEV66YxcVLK9hyqIWNB5o40NBJW0+I
      aNzAoSrk+t3MLslh5bwSLl46A79n6Jee63PR2JW8eVURgvPm5BOJG+xt6KY018vxrhClOR6y
      vU56QjFaxrEK5PuTzwGQegTZU4fsPobsb0IEW5kb6WFuPIRpGISlQVdMI4iPuDMPJVCGr7iK
      nLJqcnMK0FSRlMXL507O6mT9CuBLzQEwGbwulWDEIMutEYzoSOCJLe3MK/Hi0ARSQnN3lKoi
      D760+wIEwjd8X1ynpnLRonLmleXw2xd20traQXd3kLyAhwXVBbzv6iXMGMXSU5rrYXdD8vt2
      RUBXMEpzd4jZRX60E6tfYcBNfcfAuK1AJTkjn6WklNDfhFm/HvP4pkS5y3iE4eq9CsB74g8A
      UaAfOA7sdELOTIwTDQ1F/jyEMvL0zctKrsun9QoQmHhc93hZUOrleHeUkhwnHf1xCv1O7lxT
      wrG2MLMLPWw+1odTE9ZYgtw54Bw5o2njvgb+7X+epSd4+vDW3NnPIy/t5qn1B/jKB6/gmvPn
      Dvv0m1+azXO7xu9gdGgqcd1EcyaUXxGC/kicpRW5dI0QPPZmhICqYv+Qn0s9gln7KubBJ5Ed
      ByffxceIJRohdh7G3PVbCJSjzr0WpepqhK9wyOWzi/y8frBtzNtarwC5VZaNVRhwUhhIPAlK
      zrACnVOZ+MKuXGxdxKLInQ0j9B6uae7i7geeJhgevqZOKBrn3odeoDjXx/J5ZUNen1+Wjcuh
      JF2SxJQSv9uBIgSHW/pYVplLeZ6X+s4BqksDdCRpQQEozfFSdIZ9X+oRzINPYex9DELpikyV
      0NeIse3nGDt/jTLvWtQltyGySk5dsaA8G8HYdcWt9wN48mCErcB0RuRVjbh3/emfN404+U8S
      0w1+9McNw8a2eF0a584aOVfgzZgSdtR1cfiEs2hXfTfHu0J0BaPsP947rvPExQsSXmgpTYwj
      zxH/44cwNj+Qxsn/Jowo5oG/EH/io+hbH0TGEiHaJTleyvPGNnNbrgBC1VBKzrF6WNtRSpYP
      +/NgOMr6PWPHrADsONJCa/fwDp5rlpVbHgvkc2msnV+E7G9Gf/ZujHXftm7ivxk9grn7d8Sf
      /CRm4yZURXDJopIx32ZLRpgoW2nHsPbh8CIKFw/7UnvPAKFocuUEpZQ0tg1fenxmYRar5g7d
      C6eTG1bMwN30GvEnP41sGT3hxzL6m9Ff/DL6lv9hzbw8cn2jH4Zt8Uop5aswNDfo9vWPshJR
      smLEA7BDU1GEgpFkWXWXU0uUER+I0tDWS18oSpbHSUVhNrdeOIu9jd2TrgKRDDPzPVweeRJj
      x+NkXAcfaWLu+QOOjkO8fdnH+MWGkVcle9yyTj+ibCWyfp0tw1uNWnX1iPv/0nw/JXlZHO8Y
      Oywi64QP4Ku/eIn1exsIhqNImbDEeF1OVi0oZ82imbywv33c3uHx4NMMPqI9inIgs6t5y5bt
      rAr/J9sL3seOjuH9ArbVBjWPb0F/4R47hrYWbyGOdzw8alvV/3tmG99/bP2Yt8tnkNYAABip
      SURBVCovzCYYMRiIjLxlcjs1FldXEFXcCc1IMQ7i/KPnMRZIC/s0T5I+NZ/7Q++l2Rhq9bOt
      MJYoXY5IUZvRTEadf9OYPYVvu3IZqxaO3oBbU1XaesOjTn5I5BZv31dLtpZIrUwlPqfgH7xP
      TKnJDxAwOvknz+8pcQ61btmnAIqGsuQ2u4a3BlcApfptY1/m0Lj/MzfyrksXDylGKwScN788
      kfWV5FptmpKd++t4z6oKcsY4BCbL7MIsvlC+gYXmnpTcz2ryzTb+JesR5uYP3vXbGpqpzLoM
      c++j07ZKhLr4NoR79GSVYDjKc5uP8PruOtp6B5hTlliml88tZU5pLhcsquC5LcfYeWx85sVg
      OMaew41849bzeWJLPa/sb0E3xr/bDXgcXL+8nMs8exHrp3Yt15xILZ+b9RLPzLqDv+44jm5I
      +/sDmM3b0J//wrTpkH6KQAWOtz0wapeYfbVtfOWh56lpHhrHU5ybxb0fvILzF87gQ996goMN
      408lnVEY4A9fvRVNVegKRnl5XwubjnYklSo4qzCLi6qLuKi6CHe4Cf2pT08Tq51AXXM3Lflr
      eXJLg/0KIKXEWP8dzCPP2ilGihFoV30TpXzViFfUt/bwie/+ibaekau4ZXmcfPuT13Hvwy8P
      ihG6ftVc9ta1E/C6yPI4cTs0jjZ3E4nFWVhZyKu76oDEgfgj1y7D73XyjkuX0tDWy9aDTWw5
      0kpj5wCK5qCyJI+ivCzcDgW/x0lJtoeqEj/lud6Eh9c00J++C9m+L3Ufj904/ThuegCySuxX
      AAAZ7SP+1KchmHy/rExGqb4J9cJ/HtH0KaXkyw8+zzObDo15r/kVBTR3hQlFE0kjDk1hQWUB
      bofGQDTO0ePdVM/II6abnL+gjD+vO0D/ibAKh6aQ4xZEYnHOWziH9XsbiOmDg9IcmsJFiyv5
      p3dcQGXx0O2aceDPGG/8cLwfQcYjZl6CdtlXMqNPsHAF0C7+N1CsqxyQLkTeXNSVnxg1Zr2z
      L8Tre+qSut+R412YZzjJqsry8LocFOX6UIVAEZAX8BKN67y6q45lVcWnrvU4HfzTrZdgCCcv
      76wdMvkhUW/olZ21fOy7f2brocERpTLaj7H94aTknGrIuteQzdszYwWAEzVDDz2J8cYP7BZl
      4rhzcVz/A0SgfNTLdhxp4mP/+adhm1oMR352Fr0nCrsGfC76BhLeX4emMKskl0MNneiGiSlN
      stxOegYiSJk4AwxEYnQnGd2Zk+Xmwc/fTGVxTmJruuOXmDt/ldR7pyKicFFmrAAAQgiU6reh
      LL3TblEmhuZGu+zeMSc/jP+8f+GiGZzMUekbSMTpB8OJib39cDMDkRjRuE5cN+kORk7dv3cg
      mvTkB+gJRvjBHzcmFDMWxNz/p/EJOsWQ7fsyRwEAhFBQl38oKdt5RqG50S77GqJoSVKXzyjM
      xptsyp6q8N4rz2H14vE1iC7L9xOOjj/ZfMPeBupaejAP/+2s6OCTUQoAiR5R6gWfnTpOMmcW
      2uVfR5StTLo6W0G2N+kJvWhWEZoquHRZBXn+5ApLVRZlc/XKqkHtjIRImFYhYV3SVAW/10lR
      jg8hEj+DRF+xrYeaMA79LamxpjoZpwBwQgnO/Tjq+f8Iwt6KB6OSVYJ2zfdQxjH5IbHd+/Qt
      F5AfGD1hw6mphEIRbrv3N9z78+doae9CmsaIIT6KEFyybCb/fdeNyDdFaM4pzTt1QK6ekc/q
      RTNQhOCa86twaioLK0/nah9v7YS+9PQzyzQytkiPEAJl4TsQeXPQX7vP8pqiYyFmXIh20ecR
      ntxTPzPDfcj+DsxwLzKasO8LoYDTi+LNRskuQTgTjrGZxTl87x9u4N9//jyN7UNj/PMDXopz
      vOw+erpukJSSWDTC8upylldXcKC+g+7+MAPhGKoquPLcOdx2+RKKcnxDIpSrynLxuZ3k+j1U
      FmXT2h1EN0z21rSxePbgDD2zZRfYU9TZcjLGCjQaMtyNvvEHyLrX7BYFNDfqio8gytcQr92G
      Xrcd/fg+jNYjyIFuRo2NFwrCX4BWUo1athDH7JWEi5fy9M5m1u2upaMnRHaWmwsXVXD1yrl8
      /FuP0dQ5NEw64HPx5Lc/zOHGTr73yDoONbSfOvh6XBo3XriAiqJcfvxEohOPIgQr5pWw40gL
      51WXoRsmUkq6+iO4nRq5fjdSSjbuT9Ty/9f5h3lnzrZUf3IZyZRQAEg8/WTjRvTNP4F+e5ou
      yEAVhqOSeO0u9PqdkGQSy6hoLrTKZTiX3YDr3JsR7kTCfn8oyk33/GKQB/gkLofGF957Gfc/
      su5UT4E3U1GUQ3tvZNx5AZoieHjFK8zSxl+xbioyZRTgJNKIYx57HmP378CCXgNSSoxghPiA
      QO/snHx5j9HQXDjPuR7Pmg+glC/mo996jG2Hhip7aX4AUwjaRwmjAPC4XIzRV2MIa+bnc1/O
      AyiZluWVJqacApxEmjpm7SuYh55Ctu4m5Wl5mgdDdxKtOYoxkJ7+viMjcCy8jP2V7+BfHz82
      qGKEy6Fy5cpqntl8eMy7ZHlcOB3OU6ERYxHwufjf98+hfPvXJir4lGPKKsCZyGArZt2rmE2b
      E8pgJPeFD8GTj1K6AukuJbz1OeJH7U75ExwrXMsf1SuoCyqUF2Rzx9XLeWlHDb9+bvuY71YV
      wb0fuoof/WnTsFupMwn4XNz3sas4V9mJsf57qfoFRkVKycHmEC29MapLvOxuDFLod1Kc7STb
      oxE9sXzlZ6UvRCZjrUDjQWQVoy6+FXXxrUhTR3YeQnbXIntrkQNtEO6GeAjME/tl1QmubIQ3
      PxERmF2Jkl8N3kIirz5E6OnvnSjfZzeSOe2vcbdvD76b/x3nihsQQvDyjuT7rJ1XXcaDn7+Z
      H/xxIxv2NgzyDUDC0eZUoTLfQ0//AFJtTfUvMSK6IanriHDtsnzqOsLML/XS3hdnIKJT3xEh
      HDNYOz/5bjUTYVoowJkIRUMULoLCRUm/R0qJ2dvKwEMfJ3547Nxcq5ED3QR/9zmcB18l651f
      Z9Gs5AqLFef58XtdHG3qZsnsIuK6wbHmbjRVYfGsIpZXleB2KHz5Z3+ls7uHLfvr+c31HcxP
      8+9zEkOCpoqEgePEzwIeFaemEIzoCCEmVHl6PEw7BRgvUppE1v+G0F++eXqFyFBi2/5M157n
      uPg932X53FJ2HBndUpPr9/K2L/+GcHTo79XU2U99Ww9rF884NfkkEOzpgPE1iJkwbofCjDwX
      rxzoYV6Jl72NQUqyncwv9REzpAUFi6fJGWCiSGkSfua/CP/9p3aLMj6EQufFd/P5DU4ahimU
      JQCn04GZhKPf63JQluOiNxji0hVV3FX0IjRuSIPQmclZqwBSmoSe+jaRVx+yW5QJIghf9UV+
      01nF37cdpbMvhENTmVOWh6Zp7K/vTPpOeX4Pv/ziOyjOzSL+8jeQtS+nT+wM46xUAClNws//
      mPDzP7JblMkhFLJu+zbmkhvpC0XRVIVwVOf99z3OwDj7hr1z7ULuuWMtxvrvYR62JvndMCVH
      WkPMzHfT0hdDVQQDEYOqYg+tvTGiukl5rhu3I33ngIwMhksnUkqiGx8l/MKP7RZl8kiT4KNf
      QmvcRnFuFvkBLy/tqBn35Ad4cfuxRM0h19Ba/+lCVQR1HRHWHe6lKODkaGuYxq4oupEwjx5r
      i6R18sNZqAB6/Q4G/vyN6VOFwojT/6vPYnQlPMY7jgzOqz53XimrFpTjcqiU5Scmt1NTWTm/
      jKVnBMH1DkSpaelBeK0tsHtBVTb9YR2nqlDTHqamPcxA1OBwSwifK/3T86xSAHOgm+BvPwe6
      hX3BLEAOdBH83eeQRpzOvjd5rSVsOdjEedVllOQl8gFWzi9jx5EW9tUNrjXU2RtCBEavUJdq
      PE6F2YUeugbiXLMkj9suLKa5J8ZlC3NxaQr9aS70e9aYQaU0CT15H2ZXg92ipAW9divhlx/E
      5Rg6gU0pBzXWEALcDo1rV83l8VdPlztxOTVEnrXlKp2awvKZg7ddSytGbiWVas6aFSB+aB3R
      bX+2W4y0En7xJ8x0DjaLet0OLlhYzuHjnWiqwjlVJRys72RZVTEtXadTHjVFobIoGzz54E2+
      28xU56xYAWQ8QujJ+1ITvpzJxCOsan2SP3PlKefWujO6z3T2nY4s7dg7eKs0v7KAkrxEw2ml
      aAlm7StWSGw7Z8UKEN30KEbr9Kw/+maWhHew2NszrvcIAR+45hxUJTEdxIwL0yFaRjLtFUBG
      Bwi/+gu7xbAMhzD5jH89Ob7km1ffvHo+ly6bder/SsVbCjBtiO56etoefEdiZnAv911XSGn+
      6IdJRQjevmYBn3/PmsHNsZ3+xJ+zgGmtANI0iKz/jd1i2EJ16ws8dPfbee9VyyjM8Z5qliEA
      p0PlnKoSvv2Jq/niHRfjcg4+CgohUOZeY4PU1jOtQyH0xj30/vCd08fpNR6cHnK/9AqKL5dQ
      JE5Dey+dfSGcmkp5QYDiXB+KMvLzT/Y2EH/iI9PecDCtrUDRXU+fnZMfIBYmtvtZ3Bfejtft
      YH5FwdjvOZPAjEQDk5q/p0e+TMBXNH23QNLQie990W4xbCW25zkmusALIVDPeR8o0/cZqS69
      Y/oqgNFRi9F+zG4xbCVeuw2M8QfGnSK7EmXe9akTKIMQeVUoc6+dvgqgH9t89m5/ThIdQG+c
      eFM7IQTquR8Fz9D2olMaoaKu/BRCc01jBWjYZbcIGYFeN3b1iNEQLj/a6rtSJE1moCy4GaXs
      3MS/bZYlLUgp0Zv22y1GRpCKz0FUXISy4JYUSGM/Im8u6rkfOfX/aakAxCOYvdaV9ziFEIAA
      RQWHG5xeUB2JP2BLpWuj9ciED8InEUIktgxJ9j/IWNw5aJd9FeE4XZV7WiqAjPQhQ0Nbj6Yb
      pWAWSk4pjvmXoOaW4151K4q/AM+lHwPNiWP+WstlMntbUmLLF5oT7fKvgX/sDjgZieZBu/TL
      Qzr4TEsFMEO9YKaxhueICJznXI9eswWj7ShGRy1mbyv68T1oM+x5espgV8o+C+HJxXHVN8Fn
      bdbYpFFdaBffg1J67pCXpqUCyNDQUiEWjUxs7wtos84b/NNYGCSnegNYLZOM9KfsbiJ7Bo5r
      vjt1VgKHF+3SL6PMvHjYl6ell0PaVNbQ7D4Oppl46iLQa7aCNNGP7wM9huiwJ8BM6hOslToC
      InsGjuu/j/73ryA7DqT03inFk4t26VdQSs4Z8ZJpuQKkvFJ0sugxMPUTT1yJjJ7IuIol6pIm
      GmhMD4Q3D+3a76LMvZZEiF1mIQoW4Lj+h6NOfpimK4DQko+FPxsQaQpnEA4P6pq7EeXnJ7rJ
      R4d2s7EcRUNZ9C7U5R9AaGM3FZyeCuDy2Ta2kl+JmleB2deKcAcwe1twLLgEo+kAev0OW2RK
      2echJSBPWJUECJFobTv7cpSSczA2/SSRSmlTBKkomI96wT+hFC5M+j3TUwF8eSSWZeu3QkJ1
      gObE7GlGm1WKWd+M2dWI3rjbclkAhCsLHM7xvUlKpBGB/obEn4EWiHRCtBfMxDYPIUBxgOoB
      dy74SlDnX4Mycw3GvieQbXux7PMPVKCe816U2VcglPH5WmxVAHnyiXICIVJzJBHuLIQ7K6XW
      j2QxOhswuhpwLrwcGbO6s8xQlJwSSOZzlRJpRKF9J3Tsgo7dYCRpTDhj5yMALZCP6T0Xs7Mu
      YRBIx4ogVETRYtSFb0dUrEao41TyE1iiANI0INKTaFzRU4vsPw6hxBNFnixSJZTEns2djfAV
      gb8ckTsHkVcFzqxxKYdw+RBZebYogPAGUAvnnIhFEiAlRtsx27YFSl7F6J+dlMiBJqh/Edq2
      gZ4CpY10ogBKdjbSH8AMh5C4kX3NYEyiKJniQORUolSuQcy8GCV38jWM0qYA0oghOw4i61/D
      bN4OfQ1jTgL5pr+BxC+dOwdRugKl8mLInT3moU4oKmrxPMyOukn9DhNB9neg9w/uaWz2pL+Z
      30hoZSPsh6VEDjRDzVOJiZ8mBRWKQPX5QHEgZ94EgbnI/jZkTw2ypx4Zak+EbEvj9NlCURNd
      fNzZCH95YtIXLEAULERkJdccJFlSqgBSSgi1Yx56KpFJNNA2+ZuacWTnQWTnQcw9v4fcKpSq
      a1DmXIUYpZCrVrGU+N4XJj/+FGc4D7SMB+HoX+D4a+ntenkmZhzRsR269yNmXQdLbkWoTqQ0
      IR5OrAymnoiXUh3g8I17Pz8RUpITLKWEYDPGnj8ga16ceJO68eAKoMy7AWXhuxDu7CEvx2u2
      0PeTO9IvRyYjFHL//TWUwImnppTIzr1w4DeJQ62d+Cth4QcQgUpbxZi0Ash4CHPXbzEP/QV0
      Gzyw7lyUZe9FmXt9wgJzUq5YiO77rkAGbf6ibUQtX0T2Pz+BEAJp6lDzV6h9xrqn/lioLqh+
      D6Js7YlIWuuZsNlFSonZvB39qU9j7nvEnskPEOnG3PRjjOc+h+w+nQIpnF4c8y6yR6YMwbnw
      isTk18Ow58GEAmTK5IfEtmf/r5CHH0sYSmxgQgog9SjmtgcxXvwSBEdv1GYVsuMA+jN3YRx6
      KrGvBFzL32azVPbiXHZdYvLv+HHioJup1D8P+x5GTiZ/eYKMWwFktA/j5a9h7ns0s54mAHoE
      c+OPMDf/BGnEcFRdiAik1mowVdBmLkctqIAd/w09Y3eVt52WjbD/l0iL5pQ0dcyOg+M7A8iB
      NvSX7oXuo+mULSWIGReirrmH0AsPEHnpZ3aLYzm+W7+Jy9ECnfZ4oCdM5VWIebem7UwgjThm
      /TrMPY8gOw8nbwaVwVb0F+6Bfvts2uNBNr6B8cp/4D73w0TW/TJDOr9bg5JdgtMXgeYpNvkB
      6l9E+koR5cPH708UaeqYda9h7vrt4LNiMiuAjPSiP/8F6KlJqVBWIGasJtIeJbr5cbtFsQzv
      BdfhzolhW1j4ZFFdsPJuhH/yJlIpJbKnBmPzz5BNW4a8PuYZQOpRjFf/vyk5+QFk4wacARAu
      79gXTwOUrGxcOSZTdvJDwjq092HkJP1J0jQwDzyB/td/GnbywxgKIKXE3PYgsnXnpASxG9G+
      HWfFLLvFsATP3EoE1ltTUk6wMWEdmiAy2o/x6jcxNv54VBP96ArQ+Abmwb9MWIjMQeL0hFG8
      duTkWoejdAbOomnU36v2WWS4Y+zr3oQMtqA/+3nMJDrej6gAMtqHselHTOml9AyEAHdZPqjT
      MgUC4cvDd84KhE0e1bRgRKB2fF3rze4a4s9+HtmVXEusYRVASom545cQGr/2ZTKa14F79jy7
      xUg9iorv8jtQZHDsa6cazRsTEaNJIHsb0F/4EvQn75wdfgXorcM8/LekbzKVcOa6cC6wvkBV
      OvFc/kmcgWn05D8TMwaNL415mQx1ob/0tXFHIA9RACklxo6HM8/LmyqivXiWrBpSu2eq4jzn
      Rjxr3gNdGVyeZLK0bEaOcpCVehT9tfuQPbXjvvXQFaC3HtmwYdw3mkrI+pfIuv1bqCXVdosy
      KRwLLiXrtm9Bx87p+8ACiPVC175hX5JSYuz8FbJ5YrFOgxRASolx4E9Ml4PviER6oHMPgY89
      hFq+2G5pJoRj0ZX43/eDRAmYTA50SxVtw5d5l83bMPc+OuHbDl4B9DCyZuz91nRAHnkWESgk
      8PGH0eautlucceE87+2Jye/yIaPdCZv5dKf7UCKn4QxkbAB9448TmWQTZPAK0LAB9PCEbzaV
      kF2HobcexZdD4MM/w7X6TtuSMpJGc+K59l/Ies+3EI4Txb96jk77To4ARHsgNPiAa+x7DHrr
      J3XbUwogpcSsXzepm00ppInZuBFIFK31veNesu74LsITsFmw4VFyywl85EE8V356cK5sv/WJ
      //Ygoa/29P+CbZj7Jh/fdXoFkAay9exqKyQb3zjVPEIIBdeKm8n+5z/hWHApGVPvUlFxrXwX
      2f/8BI55q4c6uvob0i6CKSVNnSFiukEkphOO6kgp6eqPEosbNLQH6ei1INo2ePzUP419j0Ns
      YNK3PL0CdNdAzPo6OnYiu48N+Z3V/Er8H/4ZWe//IUrBLHsEO4FWeQ6BT/0a33vuQ/HlDH9R
      ODkn0WR4eUcTXX0R/raxgS2HOnh5ZzMx3eTbv9/BgYZeWrvD6IYF27BQouuPjPRiHn02Jbc8
      FRcg24c3M01r9DCy7ziicPC2RygqrmXX4VxwKdGtfyL8ykOYnRZtNYSCWr4Iz2Ufx7n4KoQ2
      SsUz00iUK0wzkZjBktl51LcFURWBqgr21HSxvCofSKwOPrdGSV6aI26jiera5rEXIZqah/Xp
      wJhJHiamKrLrCIxQTFU4PbhX34lr5TuJH9lAZOMjxA+tS0tyjXAHcCy4FPdFd6LNXJFUTRxp
      RCw5ADsdKgcaeojGE76GeeXZvLKziaIcDyCYWZRFQfbYlZgnTWwgEeJ8+JmU3fL/ASA8cdyS
      wUcKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Extrahub Travel All Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hub Centric Directional Flights' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d5Rk133f+XmhcqeqzjlMd09PxMwAAxCJBEkQIigGkBKjSK28KytQa8te
      y5Ile9e7x2uvtcleW1YiRdLmEUVSpAiKFECIAEEQOUzG5M45VnV1VVd64e4f1d3T1ZVeVRcm
      vs85c4B+4ftuVb3fe/f+wr2SEEJgY3OHIt/oBtjY3EhsA7C5IxBCYJomOzs86g1qj43NdWX6
      wiv82d+8Qp3Pza/95q8xM3yJhs49SPYYwOZOYOr8y4xo7bRpV1hQupk4+yKzEbsLZHMHMXzh
      LD957SLuxDRJZwNuh3z93gBCCCRJsvVsPUtaQEX1UrEIF6+O0tG9h/paN8PDE9T6666fAUQi
      Eaqrq7O2m6aJJMtgmpiALMsI0wAkJEnCNE1kWc76MnLpCSEQQiDLMqZpAukvUZgmSDKSREX0
      NjU221+engHsaBNgbuy38v2l9UCWwNj4HqVtbQKBaYrS2ke6W2Dk+IxCmAghbehZa98mO78z
      RVEyvo/t6LpOKpXC6/UW1xMCU4CiSBhG+jeSFYXtzYvH46iqisPhyNQzzRs7CF5fC3Lq3FXu
      f/A458+cwjQN2rq6mZxaQJgazfU1rKcEmm5y+MBQUb210DJvX5nkgfuOcObkSQzDoGdPN+Mz
      IYSRor7KRcowkV01DPZ1FtULLs0zPLnI3Yf2cPbCMIau0dbcQCiaRDcENU5BUtdx1bTQ19lU
      VG9xbprpxTCH9rRwbnQeQ0vREqgmljLQUWn1exmZWeDeY0ctfHuCuckRlqKCvhYfI7NhdF0j
      4HOQMkwkZw1eJUU0GsXX0ElXS6Co3tTIeSKijiafzsJqAt0QeBUdQwhcNS2o+hrBlWU69x2j
      3ucsomcydvEEKW8fPhEkljRIoaCk1kEyqWneg9+R5IW3LvGhD7y76Kc1jRTnT58k0H2QVGiK
      pG6C00dqLYgQBu179jJ8/jwt7V10dbdT7N2hJ+O89ebJGzsG8NUEaGlM/zCmaeJzO1gIxdCS
      MQxT4HaqxGIxJNmandYGGmkM1JB+8plUuyUW13RSsShCpC1eUpyEQ8uW9OqbWvHXeEGAaZgo
      pkYokkAIiETXiGuCfQcOEV9btKTX3NZJtde15ZJLxGIkdQOBzNraKvXNbfirvcWFAJBo6+zB
      41Q3noKC9WgUQ4j0Z1xdprW9nZSmU1dTZUmvq6cXh3LtqRqJrGEKgeL0ElqZp6amhrV1DZ/L
      yu8h09ffl77BhMBEJrIWxhQmDlcVy4szjM+t0NVSb+nTyoqTnp4uJDbeBIqT8OoKwjRxuxws
      LCxTVVPNWiSMaRbv1KguD92dbTf2DWCaBoZhYBiCgaH9rC5Mo6KhtvRgrs0xu7hK/+AQI1cu
      W9Mz0nqmKTF04AALU2M4zSju3r2szozQ2tWL0BNMy8WeXmkMQ8cwDCSHm6F9e5keH6WjtwcJ
      k9ExgYLOanAJ1V1rTU9P6zl8dewb9DE2OkxHZxcIE3Pi2vUM00TJ0Q3KQAj0jeM9tQ3s9fgZ
      GR2lo6sHU0sgZAfnzp5j74G7cDsdhbU29XQdQzeobW/F5zcYGRN09XahxSMoDhem7GJfbzML
      oXW6G7O7szv1NM3AMKCxrZMGYWBMQF9XO/HICkrCJBKOMj83S/eefqq9riJyAl03MDBo7ezB
      1JIgO+hsbWR1cRbJV4NLbWBhegTNALXo12ei68b1M4DNp952ouEQikNlaXEFrxPUmkZaA3Ws
      LM5BTS+BWh/T09PsHdqfda5pmlnbVkPLOBwqS8FVVDNFTXM3gdoqFuamqesfQMFkfjVOf1+n
      Jb3g0iIOh0owHMVMRGnp7MPtkJmZWWRwcAAFg9n5Jfb0tFvSW1qYxeFQCUcTxNeC9PQNosqC
      mbkgg4P9BJfmUFUnodUIgbrqInqC+bl5HCqsJ3XWVpboHxhENlMsrsYY6O1kYVZidnqSptZ2
      qjyuwnrCZGZuBYdskjJMVhaXGRwcwEiss5aAnq52govzJNVaOut9xT+v0JmaW8MBmFSzsLjC
      3sF+EpFVEnjo6Uo/+ffs6cHrdmScuxmw2r7N0JIEI0mQQ4iqBpZX1+nv7SK6uoxaVU9jfR3L
      C7M0d/XjUkTGW2BzrLFdT0uskxRcv0FwOBxGUZSK6cVisaxBkq13e+gZhoGu67hchd8KVkkm
      k6iqmvP+u25vAFmWqaqy0he1hhDC1rtN9fJ5gcpFUZScXiCwA2E2dzi2Adjc0dgGYHNHYxuA
      zR2NbQA2dzS2Adjc0dgGYHNHYxuAzR1NZQ1ACJLJBIZpYhoGgnRUz8bmZqWikeDQ4hSzqykS
      8TgNHjd1bfXMLkTY199dycvY2FSMihqALMtoqRTr0Sh1Djh59jIP3/+urUQpXdcrdq3NfBFb
      7/bTMzayeiupJ0lSzgqzihpAVV0jPY5qpiRQVQeH9zUxMj7NYF8nsiyjqpW73GZ+h61n61nR
      yqdX2TeAopJMxNg7tBcMHdXlwuOOVfISNjYVpaIGIMkKzS2tG8rp1NNKptza2FQa2w1qc0dj
      G4DNHY1tADZ3NLYB2NzR2AZgc8sjTJP1F1/KmvnZCrYB2NzymLEY4e98F5FMlXyubQA2tzzG
      0jJGMIhIJko+1zYAm1sebXoaZBkzEin5XNsAbK47QggSFy6W1WfPhTY9jWtoL3owVPK5tgHY
      XH+EIPjlLyMSpXdZcqEvLOI+sB8jFCz5XNsAbK47IpFAX1zCCId3r2WaGNEoju4ejBXbAGxu
      AfTFRdB1zLW1XWuZ0Siy14MaCGCE7C6QzS2ANjOL2taGsbr7N4C+vIza2IhcXYW5vl7y+RXN
      Bo1HglwZmwVFpdHrxt/exOTkInv7eyp5GZtbHG12Fvf+fRirq7vXmpzC0dGO5PFgrpeeel/Z
      yXGFSUrTkExBMqZx4uQi99xzj10RZutloC0s4Dp0CH1uLuc5pVSEpaamcN97HFNRELqGnkzC
      jlmgr1tFWGQ1SGv3ACtTw6D66OmoYnE5RFdLvV0RZusBG+tErK7iGRxg7fLlvOdY1TOWlnC1
      tKCoKrLXi6zryDumVS9UEVbRMUBDWw+p1Tka2zpobGmitaMHr5peeM3GBgDDQEJCqasra9C6
      HWEYmOsx5I1p2WWPFzNWWjeosiWRqpO+/oGMbQ0NDZW8hM0NIjU9jaOtLb2i5y4wQqvI/jok
      hwP03U2ZY0ajyFVVSBtdHrmuFiMUQm1stKxhe4FuUxKXLmPG4hXTC33pLzCWV3ato83N4Wht
      ha3lcMtHn19Abb62OqdaX49RYjTYNoDbECEE4b/6JqnJicromSba3Bx6cPcGoM/O4mhvT69p
      rCgITStbS5uextl5bblbxV+HHiwtGGYbwG2IiMdJTU5irOz+hgUw19YQiURZkdadaLNzqC0t
      AMg1NRhlJLBtaU1Po7a3bf2tBAIlu1ZtA7gNSU1OojY2VuSGBdAXl1AaG3Y/aBUCfWF+q9ui
      VFdjhsuPBqeDYNe6QEpdHaZtADbJi5fwPfRgyd2BfGhzc7gPHsTYrZ4QCE1HdrsBkOvqMMLl
      BcOEriMSSeQq39Y22e0p2QtkG8BthhACbWICz93HSn4a5kOfm8M1OIixVn53BdJJcJL7mo9e
      8deVnQ5hrK0hV/kygluS14NIJEtKs7YN4DZDJJOYqRRKQwNmxdKNF3ANDmBG1naVw6/NzePY
      6P8DKLXlxwKMxaWtscQmkiyD04FIJi3r2AZwm6FNT6e9LE4nQjcQO1Z0LwczFkOurQVTgFG+
      nj43h6Nt26B1w29fDqmpKRzt7VnbZacTkbAN4I4leeEirqG9SJKE7HGX3CfeiZlKF5pLDgds
      5NuUizY7i7rtplUC9WUnxGmTUzi6OrO2pz1L1gfWtgHcRgghSA4P4+rrA0Cuqi6rTnY7RiiE
      4venDcrrLSvleBN9bg61uXnrb9ntKqm7ktGuYBAlEMjargQCJQXDbAO4jRDJJGZ0HbmuDtjs
      YuxuIKwvLm6lFij1gbL1hBAY4TCKv+7aRlmGMrpoIpXCTCaQfb6sfWogUJK3yjaAm4To88+T
      mpzclYY2M4OjrXXLM6LU1+86GKbPzuHYCDapu9EzTVCUzJRkWUYIUfI4xYhEUOr8OdObFb8f
      Y9V+A9xyRJ//KYm3z+9KI3n5Cq59Q1t/q/X1u44FaHPXIrdKfWlP1+0YKyuoO7oskiSlg2El
      dtO02VnUluac+5RAoKQAYEUNIB4Nc/nyZZ5/4WWmR8ZYT0S5dHWskpe4LTHCYczoOtrMzK50
      UsPDuAYHt/6uxBvAWF5G2cjoVfyBsg1qswxyJ3JVFWY0WprW9DTOHANgANnntawnhKhsOrSn
      qpbudgMcPrR4iBOnFnnX8eN2RVgR4mfO4vvAo8TfeCPvOUX1dB0jvAZ+/7XjqqvQQ6t5q66s
      tM9MJBAOR/rYqir0UKgsveTMDGpzc9YxUk0NWjCItG1wXKwiTJuewbl/f879wuXCWI9l7MtX
      EWYsL1e4JBIYH5+mb98h5obj9PfUMLu4Qk9b421XEbb+yqtILifeu+/etV7y9GlqP/0pEm+9
      hSLLOXPui+lpi0s4WpozjjG9XtBSOc+z0j5zfR3Z5ULdqLCS6+oQ0WhZeubCAq6jR7KOUevq
      EOG1rO359IQQGMEgzqYm5FzXU1UkCRRA2tifryIsOTpa+XWCWzq6cSoSDW0tNLd2UeNWbsuK
      sPiJkyTfvrBrHWEYGOEwalMTakMD+uJSWTrJixdx7duXsU1yOmEXwTB9JbjV/YENt6WmI0pc
      +zmdBLeQs1BFCQRKygcSKQ2EQPZ48h4jWQyGJS9drrABSBJ1dbUA+KqrUZAIBAJkj9VvbYRp
      os/Poc3N7VoreeUKzu5uJEnC0dWFNjVVps7VjP4/pAeZktdTtu9en5/PKDgBkFQFUUZXUWha
      2iB3oNTVlpQPpM/P5/T/b0f2ejFjhT/zplHaXqAyMIJB1JZWMPRdFXQAJM69jefuYwA4OjvR
      JkovYhG6jr6yjNKYXX6aHmSWZwBb1Vvb9Tzekqc0FLE4cp7FEpXaWswSZohLjY/j3Aj05UMJ
      FI9XGMEgck2NbQDlkBoZwdnXs5HOu7vJnZKXLuHcswcAZ2dHWZ4gfWkJtb4+v1+8TM+NPjuX
      5blRAv6S83e0mZmcHiAAubq6pCzT1NgYzr7egscofj96kXlCk1eu4hoYsA2gHFIjo7gGBnC0
      tqJNltdlAdBXVpCrq5E2BpnpIM5qyRmXyYuXcA3tzblPra8va9JYAGMtjFJTk7FNqa9HL7E2
      WNuRBLcdSVHAYm2wEAJ9fh5Hc+4YwFYb/f6isYDkxUu49u2zDaBUhBDpGRI6O3H2dKfnpi+T
      5PkLeA4fzsxpVx1QYh87/Rbpz7lPqa9HLyMWIAwTdGPLOLf0AoGSDUqfm0Ntbcm9U1EQpmnJ
      6EUigdCNnCkQGZL19QXfUluG1NJsG0CpiFgsPbeN253us0+VbwCxEydwH7krY5ujo70kTWEY
      6CtBHG2tOfergUBZszmYa+F0wckOl6wa8Jesp80WeANIErLLhYgXn8FCX1zE0ZGdAr0Tpaa6
      YJapEQymP5vDYRtAqWizczg2vDZKXR16KFRWkYjQNMy1CIrfn7Hd0dFBqgRPkLm2hlJbs+Xz
      3olcW1NWRqi+vJLTbSnX1pY07hFCYEajWV2pDM3qagwLM0WnxsZx9vQUPU72+QoO1FNXh3EN
      pOevsg2gRJIXL+LqT3c3JIcj/fQqI+c+eSWdt7PzCevo6UYrISkueeUKzv7c3R8AyeUqqzJM
      m5lBbc1+qyg1NSVNay4SCSRXtvszQ7O21pKRpsbGcPYWHgAD6Yly4/G88Y/EhQtbOVO2AZRI
      amoqwwuhNjWWFbyKnzyF+9ChrO2Otja02VnLOokLF7P8/9tJV4bpJQfD9Pn5nAYge72YyZRl
      PW1iEmdXV8Fj5NrisQAhRDo1e0dcIheSJCE5nIhU9qqRQoh0Mt1Gl8w2gBIQuo4ZiWQEYhxd
      naTGx0vTESLtSerfk7VP9ngs9Yc3dfS5uYL9YkmSkH2+koNh+sICjjw3m6Sqlqc1TI2P4+jM
      nbi2iWJhdgiRSIAkbc0oUQzZ68nZDTKCIWRfuv8PtgGUhL64iFJbm9FtcXaX7gkylpZQGuoh
      X7+9qsrShFEiFgNVLXpTyF5fyeMAcz2W19siuZyYKWuVXNr0NM7enoLHKH5/0cCVvriI2lT8
      6b9JvnFF6mra/7/pebMNoARSo2NbQatNlMYm9IWFknTip8/gPnAgZ+AKwNHdbSm+kBod2yp/
      LIRaX1qZoJlMgizBxlNyJ0qd9eCalqcrlalXW7Q2ODVqrf+/pZmnMixx4UJGzMQ2gBJIXrmC
      a29mwEmu8mEmkiWlRCQvXMRz9Eje/WlXaHEDSFy8mDcAth2lxMIYIxRKv+nyGKhSb80AhK6D
      oOiM0lbSIdID4J6i19xEzVMbrM3M4ujo2PrbNgCLpPvb86hNma7BtDu0Np2LbwEzmcQIh5EL
      uAWdXV1FYwFCCFJj4ziKDDBhI32hhGCYvriUUbyepee3VnWlzc5aG7SqasHi+GsD4MIR4Mw2
      5jbSwP/w32cE9ypqAKahcfnieSZn5lmcmSVlaIyNl58qUEn0lRVSu0hbMKNRJK8nZxquo6PD
      chZn6upwTvfndtSWFrTZwjlBIqWBoRf0r2/p1TeUZgBzcwW7LWqRSOsm2vSMtW6LqhaMpYh4
      HGQ5a+WXQigBf85u1faaaajwAhmh+QnCCXBWmaxHQkwszjO079BWRZhRYh55IUrVCz/5fczo
      OoH/8Ytl6SVHx1A7O3Meo7a3k5ycxHn4mlszn17s1CncR48WbbtAwtB12PixduppU1Mo7e3W
      vgOfFz0czji20OdNzcziGxzIu1+qrUEPhYrqJUdG8Nx3r7U2Kgp6PIHkdGTdL9rCAkpjY0m/
      t/B4MCJRDMMoeP9V1AAkSaa1o4vo3DgOl4vaKplEIkWVy5t2x+1ydZHMa1nXM+NxtMlJJElG
      Ms2cUdNieqnhYVx7+nIe4+zuJv7GGxn7cuoJgTY2Rt2nP1W0X+xobMBcXt567e/US126hGdo
      yNJ3IHm9kEoVb98GxtIijubmvPvVujrMcLionj49jetTn7S0qoxSVQXxGLLbj2mayLK8pZe6
      cgXXnj0l3T9SVRWYBrIsb7Ut1/kV7QL5W7pJhmZw1fqpDwTo699LMroKG/WYpfwTySTG0nLJ
      5+X6F3/9DXz3349rcIDU8HBZGvrUNK6+PTn3qYGN/qYQBTWM5RWUQADJ4Sh6PUdXF9rMTN79
      qeFhnL091trvdIIQ6RymIsem3aUSsseT9xjZ58OMJwp+XoTAjCeQnE5LbVRqajHX1q6dD1v/
      r41PWv+sm210OKj/rS/m1Ms4rpIGIMkK/YND9HV34G9sQJVkOjray6oIW/v+Dwh+9Wu7mowV
      0tVbsddex/vQg7gPHyZx5mzJGmYigRGJINdU59wvqSqyy42IF045SJw7h3v//q0fpBCO9va8
      rlCh6+m5cSyuhSVJEpLFqcPTeTL9BdsoSVL6qV6gS2KEw3lrFHIh1+XOMRKmibFceFCeV9NC
      0Oym9AIZoRCpkeF0+muZU+dtok3PoNTVolRV4RocIDk8XHp7VlZwtDQX/DHV5ib0xcLxgMT5
      81nZn/lwdHfnHVjrKyuoTU2Wby7YWIzCwnQhifPncR88WPQ4yeEo6PrVxsdLclsqedIhzFgc
      FAU5RzllJbgpDSD85Pep+ciHce0bIjUyuiut6E9+gu99703/4XCgVFejlRi4Spy/gOvAgYLH
      ODo7SY2N591vplJp/3pdXd5jtqP46/IGr5IXLmbFI4rqWajkEkKk/eR55tzJal8BvdTYOA4L
      mZvX9HK3T982Mdc7QW4DECbf+Oqf8vVvf5ev/9V33rGL50KbmcFYWcF14ADugweInzpVtpaZ
      SKCNj28li0mShPvIEZLnrc/mIEyTxJkzuA9nJ65tx9HdVbCcMTU8gmuosPtzJ/messlLl4qW
      Be5EaSheyWWuhpF9Xktdh3w37Cbp1OVu6+2rrcmplxoZwT00lOOMypD319A0ncXpMVRPcT9z
      JQk/+X1qnvgYkizjGhxEm5goe1qP2Guv473//oyugvvAfuKnTlvW0GfnkNzutJeiAGpzM/r8
      fN79iXPncB8s/BbZjiRJ6fjCjsxQYZroS8s558YvhJXa4OTISFaqR169hoaC0WVzLYxcnXvM
      lFMvEMjZBdKmpi29kcolrwEcuOcBfus3v8je3nfu9bOT5PAwkixv/QiSqiL7qsqakVgIQezV
      V/E99GDGdqW+HpFMWM6Rj73+Ot4H7i96nOzbSInIkYIL6TeAc2Ag57581H7qF7MivWYkglJT
      vbU4tFWsBMPSg/R9BY/ZpNAcnGY8nna9loDkciFyJNhJLmdJSXClktMATrzyE77y1a/xzb/6
      K6YWdzfrgVWEEKz9zZPpp/+2J7brwD6SF0qfgEqbnkbx+7MyGiVJwtnXR2p4pHibDIPk5cvW
      BoXSRkpEJHugqS8vb5XglcKmK3I7yctXSjYkALm68BycQoj0sqN5Shd3ohboAmkTk1tzHVlF
      UpScXqW6L3w+b7VbJcipfPcD7yNpKjg91dQ2XJ83QOLsOZSmxqwBj/vAQcLf+S6+hx+yrCWE
      IPrsc/geeSTnfvdddxF/882iXZLU6BhqS6vlELyzuxt9fg61PnPipuTFS7gsuj+LIQwDz12H
      Sz5PcrsxC9QZ6IuLyFVVlj+rXFOTtzQyVaIHCABFwXPsaNbmSnxnhcjTBZLo6u6htsrNiy+9
      9o42ANJ+7cjTP6Lmox/N+sBqa0t6oeYSZkoQiQSp8XFce3NXSrn696BNzxSNMcRefRXv/fdZ
      vm71hx7HlWPAFj95qqybNhfed92Xkc1oFcnhSC9Tmud7TF6+gnv/fst6cnUV5lok53eYGh/H
      0V5aGyVJovqDHyzpnEqQxwAEl94+w4nT52gr48sulfWf/QzX3kHUgD9rnyRJqO1tJU0ZGHvt
      dXw7Br8Zmg4HSm0teoGpDUUqhTY9U7DcMEtXVbP65kLTMNfXM+bY3A3lPhGLBcOSFy+WNkiX
      5XTXJEe3RV9cQs0zS8XNRt43QCwaxdA1ZOWd638B6MEg6y+/SvWHHs97jPvgQeKnz1jSE0Kw
      /tJLRbtM7sOHSJx7O+/+5OUrOPv3lDzY3ElqdAxHR3tJ7s93Cs/RI+lliXYgDAMjFCo52qo0
      NKRTLLZr6TqSIm8l8d3s5PlVTKYXVjh25BAT4+/cAhdCCFa/8VfU/sInCvY93QcOkLxy1VJa
      hDYxidrYWHTyJPddh0mcPZd3//pLL+G9796i1yuKolwLxN1gqt77SE53rr68nF4Ir8TBZuDX
      fjWrrFObSa8E+U733StFTgMQSPzCJ54gEjd59JEH3rGLx0+cQK6qyljWJxey1wO6VnT6kfTg
      91mq3ve+oteWq6rT3ZMcA0NzPYaxGi5azG0FV/8enNehG7kbkhculNTV22R7otkm2sRE3kmw
      bkZyGsAPvvlfeerpp3j+pVeYWbI+B0wpmOvrRJ76EbW/+AuWnhbuw4dJXLpc8BiRSKDNzOIc
      yD9PziaSLKVzgy5czNoXP3cW912Hb4puy/Ug8fZ5S6WVVkhNTpYcpb6R5PyFZ5eD+Bwwv7yG
      TAlFCHqKC+ffZmJ6jvDKCrowmZ/LnXez+u3vUP1zjxWNsG7i2r+fxNnCmZzrL7+C98EHLL9+
      qx77AI7enoxtQghiL72M9/g9ljRudYSmYawEc84CVw6yz2upTPNmIWen7x/+5m9jmCZPALJs
      fRCYWA+xshqno8dPaHqKYCSIry77dZi8cgVzPYqnhJvM2d3F6vQMwjRzPpmFEMRefpnG3/ln
      ljVzlROaq6sIw6yY1+ZmR5udQ21rrViwqeaJJ26Z/j/kMgBhcvrcOUDi7gIzF+TCXdPEQw80
      cvrUGWpcKgurMQ639GYukqcbhL75LQK/8esYplnSQslyXS3J2TnUluasRdRSo6Oora2YLhdm
      GSuYbOoZ6+tUf/hDuy7fvFUW8YufP4/rQO4F58rRq1TbKq2Xa7wCOd8AEjNXzvKjl05w7u5j
      dAwc4tEHcy8Et5PEepiJ6XncVTVUeVx0Dg0xPjrJwEDf1iJ5QggCv/wFnGXkd3iPHkW7cAF3
      R3vWomfh539K9WOPlb1w3qae2tEBFRi03uhF/KzqOerrce3fj7JL7Zv58+ZbJA9yGYAk8dFP
      /TJ79x/iysQcRw5aS44C8FTVMTSUme8+OJA5cZPkcFia4TcX3vvuzTnbl7m+jr60VHr43aYy
      rt5bmLxxgGeee5GH7jvMt7/z5PVtUQEkhwO1vj5re/SFn+F7+OEb0CKbW53cBiApPP7+B3jq
      xy/z4Q/nj9DeDAjDIP7mW1lpzzY2VshbEebyt/K5z34KWbc2U/GNwgiHqXrfe3edsmBzZ5Jz
      lHHilZ/wF9/8W+49ehjd08CvfvaJ690uy6iBAGoJqdI2NtvJWw/gqmulr7cXRS2tiMPG5lYi
      bzr0Mz/8Hs8++yynL1y9vi2ysbmO5E2H9ricxONxkqndrYRuY3MzkzfS8ODD7yES1/DXXd9Z
      IWxsrid53wCt7Z10tTfzxhtvXd8W2dhcR/K8AQRnT77BYmidrt53blIiG5sbTd43QDi0iiJD
      Ipl7nhsbm5uJcidRzpsKsRRaY6C/j/n5/IXjNjY3A8LUST7/bxFm6Rm8OQ0gHArx2c9/AYfb
      x+Pvf8+uG2hj804ioktol56CZOnVizkN4HvffRJ3bR0H9g3yw6f+riTBeDTE1dEpQkvL6MJk
      dtZ+g9i8s5jLlzG1OGZ0qeRzcw6C3/PAYb7ypb9ARefwfY9aFhPCZGJyFs2UWNPiLIeX8Td1
      IYTY+lcpbL3bV29Tx6qeMXcWpftBzNVJ5IbsaSML6eU0gN4D9/KbB0rPE1+aGjGyqpUAABwC
      SURBVGYlmmA9HMbd0kQolaC5Td36cswyZ3nOha13++ptalnV0xcvofQ/ihEcQ85xTiG9is56
      1dQ1SFOXyeTENG5Vpbu1icmxKar39CLLMkoFMzZtvdtXTwhhWU/oSUwjhbvtCNrJr+U8Z3OB
      vFz73oFp32S6uq/NCtC/59aZIsPm1kNEF6CqGamqEXPd+lrIm9wZE9/Y3LYYixeRGoeQXdVg
      JBFGablrtgHY3NIYC2+jNKVntZZctYhEaa5Q2wBsbmm04ARKIN3NlqqbEWv512nLhW0ANrcs
      Qk9ipGI4vOmZSCR/L2bY+jT6YBuAzS2MuTqVHgBL6dtYquvCDE2UpGEbgM0ti7l4Abnp2qo2
      al2n/QawuXPQF86jNG9b1slTh4itlBSRtg3A5pZECIEWnEAN9Gxtkx1eBBIY2cut5sM2AJtb
      Ey1G0jRwejKn4sRdi0hYX9rXNgAbS8S1VEWT3czI7rKEzfAMck32UkxqTRtmeNqyjm0ANkUR
      QjD31P9MMrJYGUEjSeybv4SIr5YvsfA2clP2xM2SvwczNG5ZxzYAm6JoiQiBqecRy1cqomdM
      nyC5voqxMly+xkKmB2iLum5EaNKShhDCNoDblcnVEMkKLTCRnD2No64bowIGIIRAu/r3nPLf
      ixkcLVsjGZrEGejO2qfWtmFGZq3pxJYrawCmnmJ0ZJiF5RDrkQiGEIRC5b/mbMrDFIKVl/6I
      4Fz2AoDlYIy/jPPYF5CC5T+xr4lpLE+dJd7/OObSpfI0UhFShoHbXZ21S/L4MWNBS+MVY/ZM
      ZQ1AAO2d3cxMjrM8O8/C/BTRZOWKLmysEYtHaJ18FmZP7VrLFCZiZRi1//0QXSyr8Hw7xswJ
      Rt1dHBg4TmJ5pLw2rYwi1XXmXPJIUpygukArvKRuui1vVbYeQFEdzIxexZQcGHqCifEV7jt+
      b+YaYRXiVlmD60borY69TqD7OKuzJ9H1z+1KT1udxuGuxpBdIKsYiSg4sxcht6qXvPw0Zu97
      aa7xMxeLUaUlQcosVCm2Rpg+fx7RWGBdM1ctenQZqca1pZdrjTBjZayyBhCLrBJLCRQJVLeP
      e/r7GB4eYf/QwNYaYZXiZl6T6kbqCSFQJ17AeeiTOF76I0wJnEr2eVb1YrMncfc+iKqqaIE+
      pMhMZvS1BD1hpAhOn8P/wX+Ix+VG8zYjR+eQ/T0l6aVWrqAc+HTe/Ya/Gykyg7oxRsi1Rpi5
      voTsqa1sF8hb7WdoaC9Hjxyka08fXpePA0MD3DqLZt76aKk4ztUxlPZjuKvqia/u0t8+/SZq
      R7o+XGocwli8ULaWMX2Cq84OBhubkSUJAr2YwbGSNIQwiQWncPvzr0VsxRVqzJ1BaT1se4Fu
      N+Izp/C2HkJSHDib96Evlj8QNvQk8to0Us3GWs8NgxhlDlyFEGhXnkHreQSvwwmA0jhUsp6I
      zJOSVLzu7G7YJlJdV9GkOGP6LZSO47YB3G6YI8+hDn4AAKXtKNrcmbK1kktXcTTvQ1LSi6So
      dZ2Yq5PlRYRNneXpszT0HN/apNbvwVgubf0JY+YEWvt9BRfjlquaMSMLefcLIdCDY8j+HtsA
      bidMPYkjOIzSchgApWEQefly2SkM5uSrW90fANVVhaYbYJQ+X6wxe4phtYWhpuatbTX+VsKr
      +W/UXKQmXsPRcU/BY2RPHSTCCJHbAymiiyjuGiTVZRvA7YQxfw616doTG3cNDgniifWStYQQ
      GDOnUNqPZW6vakJE5kvW0q48Q7L7Pficrq3tdd4qwqZsuY5X6EnCS6NUNfUXPE6SFYTqgVQ0
      5/50//8uwE6FuK3Qh59D7b82k58kybgb+tGWSw9gGYkwiiSQPP7MHQ17MZZKHFeYOsGJk9T3
      3pexWZFkqO3AXLWWumAGx4j42ql2e4seK/vqMWPBnPv0qddR2tNvEdsAbhKEkcr7yrZ2voa5
      eBGl7a6M7Wrzfoz5cyXrGXNncbQcys62bBjAXCotJcJcvMhltZV9Ta0Z2yVJQm7Yi7F02ZKO
      PvkKcue9Bfv/W9T1IHKURwohEMEx5I1CetsAykSYOsKsXKAr8dz/jj78bNnnmytXMQP96Ujo
      NpT2o5hlGEBy4lXU7uzFx+VAH1oJrsvN3J9497upcrmy9ssNA5ZSIoQQxKdP4e6429J11brO
      nK5QMzKH5A0gqem22AZQJqlX/xjt7LcromWuThGaPIl2+UdlD1i1q89B3yNZ26WqZuTYIrph
      3ViFaSAvXURuHMza56ppIhFdQVjVM1IsjrxKbffxnLtd9b0kgxYK2ZMRgmsrBOo7LV1W9nfn
      7FqZMye3+v9gG0BZmLEg+sQrGNOVWT8tdfob8NA/Yz00A2bpq3IKUycxk/vpKClOnL569AJu
      wZ2YkTmU6mYkhydrnyoraKoXkbCW5Khf+REnXP3s39H92aS+pp5QNFT0bWrMnyXm34vP6Sx4
      3Ba+Rsz17OnSjek3UTquGaNtAGWgXfwhyl2fQSTWSiq/y4UZCxKaPktD/0MonfdhzJwsXWNl
      BK26HYcz+4YFcDQfIDV/3rJebDLzJtmJ3NCPaSGXXwhB5Nz3SPQ/TsCbe+DqUh0k3fWIaOFi
      G33qDUTXu4pec6uN7lrMvR/O2m6uL2/1/8E2gJIRqRja6E9xDjyG0nkcY8H6jZUL7cw3UQ79
      Ik7VgdTzMPrwc6VrXP17jN5H8u5XWg4h5s9a0hJCII2/iFrA1y41DFkaCBuzJzkdd3C0N7ty
      a6ttsowI7CloUMI0iEydpKr1QNFrbrVRkqja+1jWds/j/36r/w+2AZSMPvIcjp6HkJ1e1M57
      0cdeLFtLpNZZG32J2n2PA1DVcYT4wsWSvEEitU547DVqe/I/HZXGvRgrw5bGF3p4GknoSHXZ
      xSabyA0DaBY8N6lT32Cy8wMMNjQVPM7R0I9RIGVDRBeZ01Wa/YV1rCC5MmsIbloDMJYuo11+
      umJ62uWnSZ37zq40hKmTuvhD1P0fA0Bu2ocZHEGUuTCEdvEHmP0/h8vpBsChOjDreix1LzbR
      h58l0X4/ngK5MbiqcZpJjGTuwNB2kue+i+vgJwq6Gl3+LlKhyYKGaq7NcWlhmqGBe9OJb4Vo
      GCxYHWbMvEWy5chWDlElqWxFmKExMTbCzPwS0XAYQwhWVnIHIwrqxIIsP/O/Enz9K4gywu5Z
      equTTL305wRPfXtXesbkq8iBPSi+egAk1Z2uQFqzVoK3HWGkWD//t9QceiJju7P3YfThn1jT
      MA3W3/4+1Yc/UfA4SZJQG4dIBccLHmcmo0jzZ1C67i94XJXLTcQQoOeffyd15htcanyAY+3F
      vTa1/jbCofzfYXLsJdxd9+XdvxsqbAAGja2dLM5Nszy/yNzsBAmztEsIQ2f9J/+WucFPEm8+
      gjHxyq7aJAyNtWf/DTN3/Rqrgf0YE6+WpyMEyXN/g+PIZzO2Kx3HMaZeL1lPv/osese7cHtq
      MrY7ex4gMWlNz5g7TdTTjN+f28OS0c7m/TBbeICtDT+LY897M/rIuZAkqWDKsdDizA+/in/w
      UZwWVnmp9dYQ0XREjjeU0FMsr8xQ27K3qE45VLwibOL8OZo7ekguTjM2ucLxezpLqgjT3voL
      ruJn310/T2hhkPiZr+DpeijrOMsVTW9+mTOObu459F4WG9qJnf5zvF3ZAZ5ieubiRUzVDVWt
      GcdJ7feSfOX/Q973Met6QhA7+9e4H/v3GEZmiaGietBVH1p4HsnXUFAvfvpbOO/6XJZGTpoO
      kXztT3BuaGTpCRP90lO4fu7fWfpejcAg2vx5RGAgS08//7eccg/y7s5uS1oSoNd0oQXHkBv3
      ZVSEmYuXWZJrOOjxlV1hl68iDCpsAJHlGYJxE2c0gttbzT0D/YyOjrFvb7+lijB94lUmR16n
      52P/AY/Lhdq+j/mXVvAlw8gb3Y5NrFQgGfPnGLv8Enue+E/4XG46Og8w9UqMnvV55NoOy3pC
      CLS3v4X36OdQdhwj/B1oyTUUoWX4zQvp6ROvYPj7qKltyvmjePoeQkz8DMfhT+XVM8MzRCMr
      NHYcRpWLv2VFXRuO2BKKLCHJ2RVS+tQbKA0DqFUNBVSu4WgaQkz8eEtjU08IwdrFv8PY++sE
      vD5raQukU6Ol4Ahq66EMveTMGyTaj+PJEUW2Sq6KsE0q2gWqaeriwXuPsae3i/beHjxOD/v3
      9luqCDPX5ph/4T/ieO+/IlBVC4BDUZAGPoh+6Qclt0Wk1gk+938Qu/+f0lFXv6XHvo+hnX+y
      NK3IHHoigtx8MGufJMnIjYMkFq0Vdgg9QfS1P8Nzz6/kvzl6H0Ev0lVLvf1dHIc/aenmh3RA
      TKnrxMwRtxBCkDrzLZQDH7ekBaAGekiFJrI8S8b0m5xOubm3b7/lmx9IF9usZBfJx2bP4dyR
      kVpJbgovkNCTrP34fyN05Ffpbc1cVM879HNErzxXUt6NEILES/+RS83v4dhA5pfXuPd9hEZf
      QRQYwGVqmSRf/WNcRz6X9wdVO9+FNP6SJb3UW19F73sUd11H3mM8Nc0k46uIVO6ZDUQqxtr4
      a1T3P2Lpmpu43/sHyDuzOwERnsIUJmr9HstaddUBwrEo7PhdYiMvMN/zOJ21dXnOzNO2xn6S
      OYpjXu76JO1N+V2yu+WGG4BIRog+/ftc9N/NvoPvy7rJAtUBwt42zBICTvrws5yfn+bgA19A
      3vGErPJUobceQx+35r/XR39KQsg4OvOvm6y0H0NbvFDUf28sXiI6dRL/sc8UfDpKkoS78170
      ydxvAe3qM4i+R7fcp1aRVFfO66bO/jWOA0+U9MR2qSqv93waU8r8fk90fIQDgxYzNrfhr65n
      IZk9lnFW1dNSnT3/T6W4oQZgri8T+uE/50LNYY4+/Cuocm6Pgevgx0lZ7LYYK8NMvfgn1Dzy
      u/hzhN8lScJ78AkSb3+vqJaIrxJ582u4H/rtwjes04ciyYgCy3QKQ2P9xf8X93t+D2WzYKUQ
      e96HkeOtIkyd2NtPUnXwo8U1LCCSEbTFC6hFXJ+5ODT0rqzvpdNfz8Hm4l6pnbidLl7a899l
      bX9sYCjvfVEJbpgBmJF5gt//J0x2f4hjD30BtyP/TRHoupuV+auIZKSgpkisEfzR/0Lkgd9l
      sC3/+sR1TX1EDQoupyOEIP7KH6Ed+DSeqvq8x22i9jyINv1m3v3amW+ht96Nt9FaN8PVMEBq
      6XJWkM2YOYHm78dXbW2wWgzt8o9Q+96LopYeZBpqbEbe8Qbor29EsTgu2Y4qy3x4/5GSz9st
      N8QAjOVhlp/8J6wc/XUO3/2R9OC0AG6HA7P7IbSrP857jDB11n/8r5nr/ziH9hYOmsiSjOvg
      J9DO538LGJOvsRxepn7/Bwt/mA2UjuNoefz35uok68PPU3O8wMB3ZxtlGaXjXvQdU31HNRPX
      sS9Y0rCCUT9Y0uD3naSpquq6X/O6G4CRijH73P9J6t2/z+DQQ8XD5Bt493+ExKWn8vazU6/9
      KdOuNvYf/4QlzZq+h1iffAOhJbL2iWSE0Et/hPvhf4pqIZADIPt7MMNTGHpmpFmYBvEX/i8c
      D/42qqM0V57nwX+EWpcZSa3ru5+ahp6SdApeo/0unK4CaRTvAGNzIX73T37M+PyNnzf2uhuA
      5PBQ+5H/h47uu0oaKNUH2ggJFyJHkYN29cfMz16i55F/bLm/qDpc0PMetB0DTSEEidf+lGDv
      B2lsyD/50k4kxYGjrgOxI6dFmzlBKjCIr+2QZa1NZFkpeTD5TqEbu5/jVQjB6eF5vvTDk/zK
      40f40g9OEkuUXv9QSa67AciSRI239FG9JEmIA79AeCKzn23EQqy++d9ofPzf4HaW9oStOf4r
      0JHp3TGCY4zNXKHj7k+WfPO57v4HyL7MvrnadozaB79409zI5XB1Osj/9EfP8OLZ0pYg3Y4Q
      gp+enuAHr1zhX37+Yfb3NPLhBwb4ylOnMM3KrDxTDjfcDVoKbYPvRt778xnbJHcN1U/8Z7y+
      bP92MVSHK+v1v+oM4Hz/v8bnKs3FCCAHerMMQFZU5HfQi5ELIQSTC+GKPF1PXpnjvz1zht//
      /EP8/ZujzCxZm8JkO6YQ/M3PLnJ2ZJ7f+9yD+DzpAfe79ndQ5XHy7Anr6wQIIUik9Iot11TR
      VIh3Gqeq4twRzpZlBbe3tKBLIRqq62iorpze9cQwTU5emeOZN0bwuZ0srq7zmfcd4K7+lpK1
      hBD85OQYr12Y4fc++yBVXie//tG7+ZPvv8Xvf/5hfG4LrlwgltT4+jNn8bhU/tEn7kOWr70J
      JUnicx84xL/7+ov0twfoa8t+iKU0g5nlCMPTK1yeWmE5HNv4rAKXQ6HK46TJ72NvZz3HBltL
      ftPeUgZgk5ukpvOTk+O88vYUgx0Bfu0jd9Pk9xFci/O1H53m9Ysz/NIHDlu+aYUQ/M3PLjG7
      vMbvfOZ+XI70bdLRWMPP3z/AV586xRc/fryos+HK1Apffeo0H7yvn3ff1ZXz5nSqCl/8+HH+
      w7df41/98sP43Jnu2KdfH2YhFGVPm58PPzBIa30VLoeKaQqSmk4klmIhtM6zb40ST+o8dNj6
      uG3zw14X1tbWLB9rmqa4OL4kzo0sVETPCreq3tRCWPzBnz8nnnzxoojEkln7DcMUL5weF//i
      z54VZ4bni+rFk5r40g9OiK89fVqkNCNrv2ma4mtPnxJPv3Y1b/tSmi6++dw58Yd/+ZJYXl23
      9PneuDgt/vN3XxdCCKFpmlhft3beJrFESvzLLz0nZpezP1csFhOpVCrneTfdG2B2JcK3f5JO
      ewhF4phCcHhPc5Gzrh+JlM6Z4Xl+enqC7pZaPvnI/rICP7tFCMHJK3N878VL/OYT99DRWJPz
      OFmWePdd3RzobeLp166yt6t+64m+k/H5Vb7yd6d4/929PHxXd84nvCRJfPbRQ/zhX75MX5uf
      wc7MIOHUYpgv//AUx4fa+J3PPJDR5SnEPXvbaKgtPuNbPjwuB7/64WN86Qcn+Re/9BBOh7Vx
      lyREhUYTGyTiMVSnG1PXUF0ukvE4Ho+HSCRCdYGcjtVogm8/f575lSifft8BBjvricZT/OE3
      XuaLTxynrSHz3GJ6m5imYHppjZNX5nA6FB47vgdVyb5hC+kJIRiZDfGz0xMMzwY5NtDKAwc7
      eePiDMMzQb74xHG8O7oXxdpnGCZL4RhXp4MMTweZWgrjczs5PtTGob4m/NWZMzxs1zNNwQ9f
      vcLFiWW++MRxqr2lR3G36+mGyTNvDHPq6jz/4ENHaW8o/r2uhGP88ZNv8QdfeAhFlrf0Xnl7
      iq7mWtobqsv2fOm6TiqVwptnJolCPP36MMur63z+scNb14/H46iqiiNHtkFFDcDQk1w4c5qm
      /iMk5ifxNVazGhH0d7dm3RApzWBqKcyliRUuTy0TjaX4+QcGOdLfnPFEnV5a40+efIvf+9yD
      1PiuuTkL3WCmEEzMh3n9wjRnRxZo9Pu4d6idxdV1Tl+d5wuPHaa/I5BxTi69ZErnzcuzPPPG
      CE11Xh69p4+BjvotAxJC8NqFGZ55Y5jf+vhxGut8BfXiSY3Twwu8dn6aYCROQ62XnpZaBjrq
      6WyqYS2W5NTVec4OL5DSDfb3NPLxh4dwqMqWXiKl8+UfnqTG5+Jzjx7KacxW2NQLReL82d+e
      oKeljk+8Zx9O1brHKpnScTrSsQqrDyQr7MYATCH4T995nYcPd3H33vS6BvkMIJ7UKv8GWF2Y
      JOluJjZ9hfHVKA/f/y5kBJFIBJ/PR0oz+C9PvkU0rtHeWM1gR4Chrnr81R6UPK/LsyOL/N1r
      V/nnn7l/6wePRqNU7QidL4djvHh2ktPDC3Q01nC0v5kDvY14XNc++EJwna//+BxNfi+ffM++
      rX3b9dZiSX56aoI3L89xpL+Z9x7tJlCde84dgNHZEP/1mbN8/gOHGNgwrE09UwguTizz6vlp
      phYjHOxt5OHDnTT5fQUHkfGkzuWpZfZ1N+JyKFt6b48tEYzEefhw165W3tnUOz28gNupMtRV
      PN/Jil4lMAyDVCqFx5P/Oy9EJJbi//7Wq/zjX7iX+hoPiUQCVVVRVZVQJMGpq3OcH19mZS1e
      4TdAKsHli+fQ3U3UkMLf1sDUTJADQ3uIbjwhxIYf1+VULadBAPz4rVGGZ4L8xkfvznjimELw
      8rlJXjg9gUOVefhwN0f6W7K6JBntNE1ePjfFM2+M8OsfvZuu5totvflglD//2xM8crSHe/e1
      43ZaGyathGP8l++9yW987B6a/L4tvbG5EC+cnuDdd3XT3VyLsssndqW4mfV28wbY5NLEMj89
      Pc5vfOyejDfAXz9/Hp/HuTXmqKgBCNMgnkgiSTJOpwNZUTANA1lRtgygbG0h+Msfn2OgI8B9
      +zu2vvB4UuOFMxMc39tGoMZTUr8zGk8hSxJet2NLTwiBEFgevG1HN0xkSUKWK9slgJv7hq20
      XiUMANLuYZdDLTgGqKgXSJKVrEYrFpPJimpvBE3EjrC5x+Xgg/cWXjAhH1We7MFjuni6LLmy
      ++M27wz5vF3buencoIWQJQmUWzenxubmw35k2dzR2AZgc0djG4DNHY1tADZ3NLYB2NzR2AZg
      c0djG4DNHY1tADZ3NBU2AMHywhzReJJkPI4JrK+vV/YSNjYVpLLTo6/MEozLxOYv43d78NZX
      EYlL9Pmu77wzNjZWqegbYD0aIdDQiFNV0PQEb18ep6v95qnmsrHZSUUNoC7QyMTVCyQNcKhu
      7jmyn4uXh7lxs77Y2BSmol0gd3WAo4frQJbTxRqSxIG979zU1jY2u6XC2aAS8o70Z0mWt9YH
      i0TSszsLIdIzvW38t5xtsdi1xSN2HrdZ4lDKtk29cs6tlF6hz71dr9zv7EbrWf0uDMNA0zQM
      w9jVb7C5LZlMZizhtP2465IOvbk+2GbBxPYPulkvUOo2IK/e9i/B6rZNvXLOfSf1thf4bOpt
      bst1nNVtN0JPCIFpmkW3bS+I2X6cEAJZlre2mRtTxxfbtlkO6XA4Mo6TJOnG1ANsfkHbV28p
      dVshve3HWN2WS9/Wu7n0Nv9/53+Lbcult/nfG1oQk6uBCJOrV66C6qavq5WR0XFkh5s9vd3k
      OryYnjA1rlwZxuGtoavFz/DYNC5vFb1d7WW1z0jFGR6dwFPtp9nvYWJ6Hm91HZ1txb1dufRS
      sTVGJmep9TdS65GYmV+m2t9AW1PxIvVcerG1IJOziwSaWnGRZGEpRKCpjcZA7nmDiumFVxaZ
      WwrS1NaFSIRZDoZp7ujJmrbFip4kSSzPz7AUWqO9u49YaIHVtXXae/ZQnaM6r1jbJElifnqC
      UCROd18/wflJIrEUvf0DuIvMC7T10Cz6Ka4zc5OjBNp6aPCYzK1pDAz0Ew2vYJRZujx29Sqd
      /UN4jAiruovBgT2ElpfKbt/IyCh9g3vR11cwHFXs6etheWmhbL3hsSmGhoYILc/hrQ7Q19PJ
      4sJ82XpjU7MMDQ2xODtFbaCJ7s5WFnahNzW/yNDQELNTo9Q3tdLR1sj8fHl6QpjMr6wyNLSX
      ydFhmts6aa6vZnEp/9JShTBT66ysG+wd7GN0ZIT2rl7qPDLLq9aDr/8/zSY4b+jjVRkAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hub Centric Flights' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Timeline' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
