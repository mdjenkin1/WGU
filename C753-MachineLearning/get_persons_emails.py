#!/usr/bin/python

"""
    getPersonsEmails.py: generate pickle dumps of a of person's emails
    Loosely based on the vectorize_text.py and parse_out_email_text.py scripts of the udacity text_learning project
    
    parse_out_email_text.py returns a single string of space delimited stemmed words.
        It splits the email based on the line "X-FileName:"
        Everything before this line is header/metadata (content[0])
        Everything after that line is email body (content[1])
        content[1] is stripped of punctuation and the words are stemmed. This string is what is returned
        
    vectorize_text.py 
        This script generates two lists
            The list word_data contains the parsed data generated by parse_out_email_text. One entry per email.
            The list from_data contains a number representing who sent that email.
            These two lists are serialized and dumped to pickle files
        This script only seems usable as an example of how to access and read the email files.

    After inspecting some emails it might be worth inspecting the metadata. In some cases it holds more information than the body.

    Validation of 'X-FileName:' as a 
        C:\Users\Michael\Documents\WGU\WGU-Projects\C753-MachineLearning\maildir [master ≡ +1 ~0 -0 !]
        λ  gci -recur | ?{$_.PSIsContainer -eq $False} | measure-object
        Count    : 517401
        C:\Users\Michael\Documents\WGU\WGU-Projects\C753-MachineLearning\maildir [master ≡ +1 ~0 -0 !]
        λ  gci -recur |? {$_.PSIsContainer -eq $False} | sls -pattern 'X-FileName:' |measure-object
        Count    : 517401
"""

import os
import pickle
import re
import sys

sys.path.append("./udacity_tools/")
from parse_out_email_text import parseOutText

def getPersonsEmails(maildir, persons = [], maxPersons = 1)
    # Validate existence of maildir
    # For each person in persons
        # Validate person exists in maildir
        # Process the person's emails